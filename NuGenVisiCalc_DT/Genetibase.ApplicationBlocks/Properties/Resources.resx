<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Argument_InvalidDirectory" xml:space="preserve">
    <value>Destination directory should not be empty and should not contain the follwoing characters: {0}</value>
  </data>
  <data name="Argument_InvalidFilename" xml:space="preserve">
    <value>Filename should not be empty and should not contain the following characters: {0}</value>
  </data>
  <data name="Argument_InvalidHeightResolution" xml:space="preserve">
    <value>Height resolution should be positive.</value>
  </data>
  <data name="Argument_InvalidHWnd" xml:space="preserve">
    <value>Specified handle 0x{0:X} does not represent a window.</value>
  </data>
  <data name="Argument_InvalidMinutes" xml:space="preserve">
    <value>Specify a non-negative value only.</value>
  </data>
  <data name="Argument_InvalidSeconds" xml:space="preserve">
    <value>Specify the value that is not negative and is not greater than 59.</value>
  </data>
  <data name="Argument_InvalidWidthResolution" xml:space="preserve">
    <value>Width resolution should be positive.</value>
  </data>
  <data name="Category_Appearance" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="Category_Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="Category_Layout" xml:space="preserve">
    <value>Layout</value>
  </data>
  <data name="Category_PropertyChanged" xml:space="preserve">
    <value>Property Changed</value>
  </data>
  <data name="Description_FontBlock_SelectedFont" xml:space="preserve">
    <value>Determines the currently selected font.</value>
  </data>
  <data name="Description_FontBlock_SelectedFontChanged" xml:space="preserve">
    <value>Occurs when the value of the SelectedFont property changes.</value>
  </data>
  <data name="Description_ImageExportBlock_Icon" xml:space="preserve">
    <value>Determines the icon that is displayed in the task bar for the export dialog.</value>
  </data>
  <data name="Description_ImageExportBlock_Location" xml:space="preserve">
    <value>Determines the export dialog location.</value>
  </data>
  <data name="Description_ImageExportBlock_ShowInTaskbar" xml:space="preserve">
    <value>Indicates whether to show a button in the Windows task bar for the export dialog.</value>
  </data>
  <data name="Description_ImageExportBlock_Size" xml:space="preserve">
    <value>Determines the export dialog size.</value>
  </data>
  <data name="Description_ImageExportBlock_Text" xml:space="preserve">
    <value>Determines the text for the export dialog.</value>
  </data>
  <data name="Description_ImageExportBlock_TextChanged" xml:space="preserve">
    <value>Occurs when the value of the Text property changes.</value>
  </data>
  <data name="Description_Thumbnail_Image" xml:space="preserve">
    <value>Determines the image that will be displayed on the control.</value>
  </data>
  <data name="Description_Thumbnail_ImageIndex" xml:space="preserve">
    <value>Determines the index of the image in the ImageList to display on the control.</value>
  </data>
  <data name="Description_Thumbnail_ImageList" xml:space="preserve">
    <value>Determines the ImageList to get the image to display on the control.</value>
  </data>
  <data name="Description_Thumbnail_IsTextVisible" xml:space="preserve">
    <value>Indicates whether the text specified by the Text property is visible.</value>
  </data>
  <data name="Description_Thumbnail_IsTextVisibleChanged" xml:space="preserve">
    <value>Occurs when the value of the IsTextVisible property changes.</value>
  </data>
  <data name="Description_Thumbnail_Mode" xml:space="preserve">
    <value>Determines how the thumbnails are layouted.</value>
  </data>
  <data name="Description_Thumbnail_ModeChanged" xml:space="preserve">
    <value>Occurs when the value of the Mode property changes.</value>
  </data>
  <data name="Description_Thumbnail_TextAlign" xml:space="preserve">
    <value>Determines the alignment of the text on the control.</value>
  </data>
  <data name="Description_Thumbnail_TextAlignChanged" xml:space="preserve">
    <value>Occurs when the value of the TextAlign property changes.</value>
  </data>
  <data name="Description_Thumbnail_ThumbnailSize" xml:space="preserve">
    <value>Determines the width and height of the thumbnails.</value>
  </data>
  <data name="Description_Thumbnail_ThumbnailSizeChanged" xml:space="preserve">
    <value>Occurs when the value of the ThumbnailSize property changes.</value>
  </data>
  <data name="Description_ThumbnailContainer_ImageList" xml:space="preserve">
    <value>Determines the ImageList that provides the images to display as thumbnails.</value>
  </data>
  <data name="FileFormat_BMP" xml:space="preserve">
    <value>BMP</value>
  </data>
  <data name="FileFormat_JPEG" xml:space="preserve">
    <value>JPEG</value>
  </data>
  <data name="FileFormat_PNG" xml:space="preserve">
    <value>PNG</value>
  </data>
  <data name="FileFormat_TIFF" xml:space="preserve">
    <value>TIFF</value>
  </data>
  <data name="ImageType_Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ImageType_Grayscale" xml:space="preserve">
    <value>Grayscale</value>
  </data>
  <data name="ImageType_Monochrome" xml:space="preserve">
    <value>Monochrome</value>
  </data>
  <data name="InvalidOperation_NoImagesToExport" xml:space="preserve">
    <value>There are no images to export.</value>
  </data>
  <data name="Message_Alert" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="Text_DialogBlock_cancelButton" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="Text_DialogBlock_okButton" xml:space="preserve">
    <value>&amp;Ok</value>
  </data>
  <data name="Text_FontBlock_Bold" xml:space="preserve">
    <value>b</value>
  </data>
  <data name="Text_FontBlock_Italic" xml:space="preserve">
    <value>i</value>
  </data>
  <data name="Text_FontBlock_Underline" xml:space="preserve">
    <value>u</value>
  </data>
  <data name="Text_ImageExportDialog_backButton" xml:space="preserve">
    <value>&lt; &amp;Back</value>
  </data>
  <data name="Text_ImageExportDialog_cancelButton" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="Text_ImageExportDialog_cancelExportButton" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="Text_ImageExportDialog_chooseButton" xml:space="preserve">
    <value>&amp;Choose...</value>
  </data>
  <data name="Text_ImageExportDialog_closeButton" xml:space="preserve">
    <value>&amp;Close</value>
  </data>
  <data name="Text_ImageExportDialog_destFolderLabel" xml:space="preserve">
    <value>Destination folder:</value>
  </data>
  <data name="Text_ImageExportDialog_exportButton" xml:space="preserve">
    <value>&amp;Export</value>
  </data>
  <data name="Text_ImageExportDialog_formatLabel" xml:space="preserve">
    <value>Format:</value>
  </data>
  <data name="Text_ImageExportDialog_maxHeightCheckBox" xml:space="preserve">
    <value>Maximum height:</value>
  </data>
  <data name="Text_ImageExportDialog_maxWidthCheckBox" xml:space="preserve">
    <value>Maximum width:</value>
  </data>
  <data name="Text_ImageExportDialog_nextButton" xml:space="preserve">
    <value>&amp;Next &gt;</value>
  </data>
  <data name="Text_ImageExportDialog_numWatermarkCheckBox" xml:space="preserve">
    <value>Number watermark</value>
  </data>
  <data name="Text_ImageExportDialog_StepOneCaption" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Text_ImageExportDialog_StepOneDescription" xml:space="preserve">
    <value>Select the images to export.</value>
  </data>
  <data name="Text_ImageExportDialog_StepTwoCaption" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Text_ImageExportDialog_StepTwoDescription" xml:space="preserve">
    <value>Specify custom export settings.</value>
  </data>
  <data name="Text_ImageExportDialog_templateLabel" xml:space="preserve">
    <value>File prefix:</value>
  </data>
  <data name="Text_ImageExportDialog_Text" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Text_ImageExportDialog_typeLabel" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="Text_Presenter_TempFileExt" xml:space="preserve">
    <value>tmp</value>
  </data>
  <data name="Text_Presenter_TempFolderPrefix" xml:space="preserve">
    <value>NuGenPresenter</value>
  </data>
</root>