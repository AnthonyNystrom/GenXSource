<?xml version="1.0" encoding="utf-8" ?>
<CodeDoc>
	<Class name='DisplayingDockList'>
		<ClassDef>
			<summary>Maintains a list of visible nested docking <see cref="Netron.Neon.WinFormsUI.DockPane" /> objects.</summary>
			<remarks>
				<include file='Interfaces.xml' path='//Interface[@name="IDockListContainer"]/InterfaceDef/remarks/*' />
			</remarks>
			<seealso cref="Netron.Neon.WinFormsUI.DockPane">DockPane Class</seealso>
		</ClassDef>
		<Property name="DockList">
			<summary>Gets the associated <b>DockList</b> object.</summary>
			<value>A <see cref="Netron.Neon.WinFormsUI.DockList" /> object which associates with this <B>DisplayingDockList</B> object.</value>
		</Property>
		<Property name="Container">
			<summary>Gets the container which owns the associated <see cref="Netron.Neon.WinFormsUI.DockList" /> object.</summary>
			<value>A <see cref="Netron.Neon.WinFormsUI.IDockListContainer" /> which contains the associated
			<see cref="Netron.Neon.WinFormsUI.DockList" /> object.</value>
			<seealso cref='Netron.Neon.WinFormsUI.DockList'>DockList Class</seealso>
		</Property>
		<Property name="DockState">
			<summary>Gets the docking state from the <see cref="Netron.Neon.WinFormsUI.DisplayingDockList.Container" />.</summary>
			<include file='Interfaces.xml' path='//Interface[@name="IDockListContainer"]/Property[@name="DockState"]/value' />
		</Property>
		<Property name="IsFloat">
			<summary>Determines whether the the <see cref="Netron.Neon.WinFormsUI.DisplayingDockList.Container" /> is floating.</summary>
			<include file='Interfaces.xml' path='//Interface[@name="IDockListContainer"]/Property[@name="IsFloat"]/value' />
		</Property>
		<Property name="Item">
			<summary>
				<para>Gets a <see cref="Netron.Neon.WinFormsUI.DockPane"/> at the specified index.</para>
				<para>In C#, this property is the indexer for the <see cref="Netron.Neon.WinFormsUI.DisplayingDockList"/> class.</para>
			</summary>
			<param name="index">
			The zero-based <see cref="Netron.Neon.WinFormsUI.DockPane"/> to get.
		</param>
			<value>
			The <see cref="Netron.Neon.WinFormsUI.DockPane" /> at the specified index.
		</value>
		</Property>
		<Method name="Contains(DockPane)">
			<summary>
			Determines whether a <see cref="Netron.Neon.WinFormsUI.DockPane" /> is in the
			<see cref="Netron.Neon.WinFormsUI.DisplayingDockList" />.
		</summary>
			<param name="pane">
			The <see cref="Netron.Neon.WinFormsUI.DockPane" /> to locate in
			<see cref="Netron.Neon.WinFormsUI.DisplayingDockList" />.
		</param>
			<returns>
			<b>true</b> if <paramref name="pane" /> is found in the
			<see cref="Netron.Neon.WinFormsUI.DisplayingDockList" />;
			otherwise, <b>false</b>.
		</returns>
		</Method>
		<Method name="IndexOf(DockPane)">
			<summary>
			Searches for the specified <see cref="Netron.Neon.WinFormsUI.DockPane" />
			and returns the zero-based index within the entire
			<see cref="Netron.Neon.WinFormsUI.DisplayingDockList" />.
		</summary>
			<param name="pane">
			The <see cref="Netron.Neon.WinFormsUI.DockPane" />
			to locate in the <see cref="Netron.Neon.WinFormsUI.DisplayingDockList" />
		</param>
			<returns>
			The zero-based index of <paramref name="pane" /> within the entire
			<see cref="Netron.Neon.WinFormsUI.DisplayingDockList" />, if found;
			otherwise, -1.
		</returns>
		</Method>
	</Class>
</CodeDoc>