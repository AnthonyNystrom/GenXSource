using System;
using System.Text;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Collections.Generic;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using Next2Friends.Data;
using Next2Friends.Misc;

public partial class AskAFriendPage : System.Web.UI.Page
{
   // public AskAFriend AAF;
   // public AskAFriend LastAAF;
    public AjaxAskAFriend InitialAAF;

    public bool IsPermalink = false;
    public bool IsLoggedIn
    {
        get
        {
            member = (Member)Session["Member"];

            if (member == null)
            {
                return false;
            }
            else
            {
                return true;
            }

        }
    }
    public Member member = null;
    public string LoginUrl;
    private string ServerURL = ASP.global_asax.WebServerRoot + "AskAFriend.aspx?q=";

    protected void Page_Load(object sender, EventArgs e)
    {
        LoginUrl = @"signup.aspx?u=" + Request.Url.AbsoluteUri;

        AjaxPro.Utility.RegisterTypeForAjax(typeof(AskAFriendPage));

        

        ////if it is perma Link disable voting and show the result
        ///if it is not a perma link and user open the page 
        ///for the first time just open the page for voting and show no result
        ///if it's response or skip a question show the next question and show
        ///the result of the pervious question

        try
        {

            string strAAFQuestion = Request.Params["q"];

            //we should find a better way to see if it's permalink or no
            if (!String.IsNullOrEmpty(strAAFQuestion) && CurrentAskAFriend==null)
            {
                CurrentAskAFriend = AskAFriend.GetAskAFriendByWebAskAFriendID(strAAFQuestion);

                //becuse we want to see the result of this question
                LastAskAFriend = CurrentAskAFriend;

                InitialAAF = GenarateAjaxAskAFriend();

                IsPermalink = true;

                return;
            }
        }
        catch
        {

        }
        if (CurrentAskAFriend == null)
        
            InitialAAF = NextQuestion();
                    
        else

            
            InitialAAF = GenarateAjaxAskAFriend();
    }


    public AskAFriend CurrentAskAFriend
    {
        get
        {
           return (AskAFriend)Session["AskAFriend"];
        }
        set
        {
            Session["AskAFriend"] = value;
        }
    }

    public AskAFriend LastAskAFriend
    {
        get
        {
            return (AskAFriend)Session["LastAskAFriend"];
        }
        set
        {
            Session["LastAskAFriend"] = value;
        }

    }

    /// <summary>
    /// 
    /// Genarate new question
    /// </summary>
    /// <returns>AjaxAskAFriend should return a new AjaxAskAFriend Object</returns>

    [AjaxPro.AjaxMethod]
    public AjaxAskAFriend SkipQuestion()
    {
        //All situations in this method
        //1. if we destroyed session object
        //2. should we skip this question if anything goes wrong, if yes should
        //I return NextQuestion
        try
        {
           AskAFriend AAF=CurrentAskAFriend;

            if (AAF != null)
            {
               AAF.SkipAAFQuestion();
            }

        }
        catch(Exception ex)
        {
            Next2Friends.Data.Trace.Tracer(ex.ToString(), "AAF SkipQuestion");
        }

        return NextQuestion();
    }

    [AjaxPro.AjaxMethod]
    public AjaxAskAFriend ResponseQuestion(int SelectedValue)
    {
        try
        {
            AAFResponse(SelectedValue);

        }
        catch (Exception ex)
        {
            Next2Friends.Data.Trace.Tracer(ex.ToString(), "AAF ResponseQuestion");

            
        }
        return NextQuestion();
    }

    public string GenarateResult(AskAFriend askAFriend)
    {
       

        if (askAFriend == null)
          //  return "Oops";
            return "";
        
        List<int> resultArr = null;


       try
       {

           resultArr = AskAFriend.GetAskAFriendResult(askAFriend);

       }
       catch (Exception ex)
       {

           Next2Friends.Data.Trace.Tracer("CAskafriend line 284" + ex.Message, "AAF", "ost");

           return "Oops";
       }

       finally { }
        if (resultArr == null)

            return "";



        StringBuilder sbLastAAF = new StringBuilder();

        if (askAFriend.ResponseType == (int)AAFResponseType.RateTo10)
        {

                object[] Lastparameters = new object[12];

                Lastparameters[0] = (askAFriend.Question.Length > 28) ? askAFriend.Question.Substring(0, 28) + ".." : askAFriend.Question;
                Lastparameters[1] = askAFriend.Photo[0].PhotoResourceFile.FullyQualifiedURL;
                Lastparameters[2] = resultArr[0];
                Lastparameters[3] = resultArr[1];
                Lastparameters[4] = resultArr[2];
                Lastparameters[5] = resultArr[3];
                Lastparameters[6] = resultArr[4];
                Lastparameters[7] = resultArr[5];
                Lastparameters[8] = resultArr[6];
                Lastparameters[9] = resultArr[7];
                Lastparameters[10] = resultArr[8];
                Lastparameters[11] = resultArr[9];

                sbLastAAF.AppendFormat(@"   <div class='aaf_next'>
					                <p>{0}</p>
					                <img src='{1}' style='width:100px;' alt='4' />
					                <ul class='bar_graph clearfix'>
						                <li>
							                1<div class='bar' style='width: {2}px;'></div>
							                2<div class='bar' style='width: {3}px;'></div>
							                3<div class='bar' style='width: {4}px;'></div>
							                4<div class='bar' style='width: {5}px;'></div>
							                5<div class='bar' style='width: {6}px;'></div>
				                            6<div class='bar' style='width: {7}px;'></div>
							                7<div class='bar' style='width: {8}px;'></div>
							                8<div class='bar' style='width: {9}px;'></div>
							                9<div class='bar' style='width: {10}px;'></div>
                                            10<div class='bar' style='width: {11}px;'></div>
						                </li>
					                </ul></div>", Lastparameters);
            }
            else
            {
                object[] Lastparameters = new object[7];

                Lastparameters[0] = (askAFriend.Question.Length > 28) ? askAFriend.Question.Substring(0, 28) + ".." : askAFriend.Question;
                Lastparameters[1] = askAFriend.Photo[0].PhotoResourceFile.FullyQualifiedURL;

                if (askAFriend.ResponseType == (int)AAFResponseType.YesNo)
                {
                    Lastparameters[2] = "Yes";
                    Lastparameters[3] = "No";
                }
                else if (askAFriend.ResponseType == (int)AAFResponseType.AB)
                {
                    Lastparameters[2] = askAFriend.ResponseA;
                    Lastparameters[3] = askAFriend.ResponseB;
                }
                else if (askAFriend.ResponseType == (int)AAFResponseType.MultipleSelect)
                {
                    if (askAFriend.NumberOfPhotos == 2)
                    {

                    }
                    // Lastparameters[6] = askAFriend.ResponseB;
                }

                Lastparameters[4] = resultArr[0];
                Lastparameters[5] = resultArr[1];

                if (askAFriend.ResponseType == (int)AAFResponseType.MultipleSelect)
                {
                    sbLastAAF.AppendFormat(@"<div class='aaf_next'>
					                <p>{0}</p>
					                <img src='{1}' style='width:100px;' alt='4' />
					                <ul class='bar_graph clearfix'>
							                {2}<div class='bar' style='width: {4}px;'></div>
                                            {3}<div class='bar' style='width: {5}px;'></div>
					                </ul></div>", Lastparameters);
                }
                else
                {
                    sbLastAAF.AppendFormat(@"<div class='aaf_next'>
					                <p>{0}</p>
					                <img src='{1}' style='width:100px;' alt='4' />
					                <ul class='bar_graph clearfix'>
							                {2}<div class='bar' style='width: {4}px;'></div>
                                            {3}<div class='bar' style='width: {5}px;'></div>
					                </ul></div>", Lastparameters);
                }
            }

        return sbLastAAF.ToString();

        }

    public string GenarateAnswers(AskAFriend askAFriend)
    {
        bool HasntYetVoted = false;

        if (member != null) // it means if memeber is null HasntYetVoted=false
        {
            HasntYetVoted = AskAFriendResponse.HasntYetVoted(member, CurrentAskAFriend);
        }

        HasntYetVoted = true;

         StringBuilder sbHTML = new StringBuilder();

        if (!IsPermalink && HasntYetVoted)
      //  if(false)
        {


           
            // base on type of the question we should generate answers
            // base on premaLink or not we give the user chance to vote or not
            // Should we disable voting for anymouse users

            if (askAFriend.ResponseType == (int)AAFResponseType.YesNo)
            {

                //why we are using li

                string photo = askAFriend.Photo[0].PhotoResourceFile.FullyQualifiedURL;

                sbHTML.AppendFormat(@"<li>
					    <input type='radio' value='1' name='rbResponse' onclick='SubmitResponse(1);' >&nbsp;Yes&nbsp;&nbsp;    
                        <input type='radio' value='2' name='rbResponse' onclick='SubmitResponse(2);'>&nbsp;No 
						<br />

						<img src='{0}' alt='1' />
					</li>", photo);
            }
            else if (askAFriend.ResponseType == (int)AAFResponseType.AB)
            {
                object[] parameters = new object[3];
                ///AAF.Photo[0].PhotoResourceFile.FullyQualifiedURL is empty
                parameters[0] = askAFriend.Photo[0].PhotoResourceFile.FullyQualifiedURL;
                parameters[1] = askAFriend.ResponseA;
                parameters[2] = askAFriend.ResponseB;

                sbHTML.AppendFormat(@"  <li>
                                      <input type='radio' name='rbResponse' value='1' onclick='SubmitResponse(1);'>&nbsp;{1}&nbsp;&nbsp;
                                      <input type='radio' name='rbResponse' value='2' onclick='SubmitResponse(2);'>&nbsp;{2} 
						              <br />
						              <img src='{0}' alt='1' />
					                </li>", parameters);

            }
            else if (askAFriend.ResponseType == (int)AAFResponseType.RateTo10)
            {

                string photo = askAFriend.Photo[0].PhotoResourceFile.FullyQualifiedURL;

                sbHTML.AppendFormat(@"<li>
					    <input type='radio' name='rbResponse' value='1' onclick='SubmitResponse(1)'>&nbsp;1 
                        <input type='radio' name='rbResponse' value='2' onclick='SubmitResponse(2)'>&nbsp;2  
					    <input type='radio' name='rbResponse' value='3' onclick='SubmitResponse(3)'>&nbsp;3     
                        <input type='radio' name='rbResponse' value='4' onclick='SubmitResponse(4)'>&nbsp;4  
					    <input type='radio' name='rbResponse' value='5' onclick='SubmitResponse(5)'>&nbsp;5     
                        <input type='radio' name='rbResponse' value='6' onclick='SubmitResponse(6)'>&nbsp;6  
					    <input type='radio' name='rbResponse' value='7' onclick='SubmitResponse(7)'>&nbsp;7     
                        <input type='radio' name='rbResponse' value='8' onclick='SubmitResponse(8)'>&nbsp;8 
					    <input type='radio' name='rbResponse' value='9' onclick='SubmitResponse(9)'>&nbsp;9    
                        <input type='radio' name='rbResponse' value='10' onclick='SubmitResponse(10)'>&nbsp;10 

						<br />

						<img src='{0}' alt='1' />
					</li>", photo);


            }
            else if (askAFriend.ResponseType == (int)AAFResponseType.MultipleSelect)
            {

                for (int i = 0; i < askAFriend.Photo.Count; i++)

                    sbHTML.AppendFormat("<li><input name='rbResponse' type='radio' value='{0}' onclick='SubmitResponse({0})'/><br /><img src='{1}"

                        + "' width='160' alt='1' /></li>", i + 1, askAFriend.Photo[i].PhotoResourceFile.FullyQualifiedURL);


            }
        } 
        else
            {
                //permalink disables voting
                
                if (CurrentAskAFriend.ResponseType == (int)AAFResponseType.MultipleSelect)
                {
                    object[] parameters = new object[3];

                    parameters[0] = CurrentAskAFriend.Photo[0].PhotoResourceFile.FullyQualifiedURL;
                    parameters[1] = CurrentAskAFriend.Photo[1].PhotoResourceFile.FullyQualifiedURL;
                    parameters[2] = CurrentAskAFriend.Photo[2].PhotoResourceFile.FullyQualifiedURL;


                    sbHTML.AppendFormat(@"<li><img src='{0}' width='160' alt='1' /></li>
					                      <li><img src='{1}' width='160' alt='1' /></li>
					                      <li><img src='{2}' width='160' alt='1' /></li>", parameters);

                }
                else
                {
                    object[] parameters = new object[3];

                    parameters[0] = CurrentAskAFriend.Photo[0].PhotoResourceFile.FullyQualifiedURL;
                    parameters[1] = CurrentAskAFriend.ResponseA;
                    parameters[2] = CurrentAskAFriend.ResponseB;

                    sbHTML.AppendFormat(@"<li><img src='{0}' alt='1' />
					                      </li>", parameters);
                }
            /////////////
            }
   

        return sbHTML.ToString();

    }

    public string GenarateBookmarks(AskAFriend askAFriend)
    {
        
        StringBuilder sbBookmarks = new StringBuilder();

        object[] bookmarkParameters = new object[2];

        bookmarkParameters[0] = ServerURL;

        bookmarkParameters[1] = askAFriend.WebAskAFriendID;

        sbBookmarks.AppendFormat(@"Bookmark this <span>
						<a href='http://digg.com/submit?phase=2&url={0}{1}' target='_blank'><img src='images/digg.png' alt='digg' /></a> 
						<a href='http://del.icio.us/post?url={0}{1}' target='_blank'><img src='images/delicious.png' alt='delicious' /></a>
						<a href='http://www.stumbleupon.com/refer.php?{0}{1}' target='_blank'><img src='images/stumbleupon.png' alt='stumbleupon' /></a> 
						<a href='http://www.technorati.com/faves?add={0}{1}' target='_blank'><img src='images/technorati.png' alt='technorati' /></a>
					</span>", bookmarkParameters);

            return sbBookmarks.ToString();
    }

    public string GenarateComments(AskAFriend askAFriend)
    {
        
        AjaxAAFComment[] commentList = AjaxAAFComment.GetAAFCommentsByAskAFriendIDWithJoin(askAFriend.AskAFriendID);

        StringBuilder sbComments = new StringBuilder();

            for (int i = 0; i < 10; i++)
            {
                if (commentList.Length <= i)
                    break;

                sbComments.Append(commentList[i].ToHTML());
            }
        return sbComments.ToString();
    }

    public string GenarateCommentPost(AskAFriend askAFriend)
    {
        StringBuilder sbCommentPost = new StringBuilder();
            object[] sbCommentPostParams = new object[1];
            sbCommentPostParams[0] = askAFriend.WebAskAFriendID;
            sbCommentPost.AppendFormat(@"<p class='align_right'>
                                        <textarea rows='5' id='txtNewComment' style='width:530px;'></textarea><br />
                                        <a href='javascript:cancelShowPostComment();'>cancel</a> &nbsp;&nbsp;|&nbsp;&nbsp; 
                                        <a href='javascript:ajaxPostComment(""{0}"");'>post</a></p>", sbCommentPostParams);
        return sbCommentPost.ToString();

    }

    public string GenaratePermaLink(AskAFriend askAFriend)
    {
        return string.Format("<input type='text' onclick='this.select();' style='width:430px' value='{0}'>",ServerURL + askAFriend.WebAskAFriendID);
    }

    public AjaxAskAFriend NextQuestion()
    {
        LastAskAFriend = CurrentAskAFriend;

        CurrentAskAFriend = AskAFriend.GetNextQuestion();

        return GenarateAjaxAskAFriend();

    }
    
    public AjaxAskAFriend GenarateAjaxAskAFriend()
    {


            AjaxAskAFriend ajaxAskAFriend = new AjaxAskAFriend();

            ajaxAskAFriend.Question = CurrentAskAFriend.Question;

            ajaxAskAFriend.LastAAF = GenarateResult(LastAskAFriend);

            ajaxAskAFriend.Comments = GenarateComments(CurrentAskAFriend);

            ajaxAskAFriend.Bookmarks = GenarateBookmarks(CurrentAskAFriend);

            ajaxAskAFriend.CommentPost = GenarateCommentPost(CurrentAskAFriend);

            ajaxAskAFriend.HTML = GenarateAnswers(CurrentAskAFriend) + GenaratePermaLink(CurrentAskAFriend);

          return ajaxAskAFriend;
    }

    private void AAFResponse(int QuestionResponseValue)
    {
        AskAFriend AAF = CurrentAskAFriend;

        if (AAF != null)
        {
            //bool IsAllowed = AskAFriend.IsVoteValueAllowed(AAF, QuestionResponseValue);
            bool IsAllowed = true;
            // only add the vote if a valid response was sent to the server
            if (IsAllowed)
            {
                AskAFriendResponse AAFResponse = new AskAFriendResponse();

                AAFResponse.AskAFriendID = AAF.AskAFriendID;

                Member me = (Member)Session["Member"];

                if (me != null)
                {
                    AAFResponse.MemberID = me.MemberID;
                }

                AAFResponse.Result = QuestionResponseValue;

                AAFResponse.Save();

                AAF.TotalVotes++;
                AAF.Save();
            }
        }
    }

    /// <summary>
    /// Post a new comment to the AAF Question page
    /// </summary>
    /// <param name="CommentText">The text body of the comment</param>
    /// <returns>An AjaxComment object populated with all the comments properties</returns>
    [AjaxPro.AjaxMethod]
    public AjaxAAFComment PostComment(string WebQuestionID, string CommentText)
    {
        
        //check member to redirect 
        
        member = (Member)Session["Member"];

        AskAFriend AAF = CurrentAskAFriend;

        if (AAF.WebAskAFriendID == WebQuestionID)
        {
            AskAFriendComment comment = new AskAFriendComment();

            comment.AskAFriendID = AAF.AskAFriendID;
            comment.WebAskAFriendCommentID = Next2Friends.Misc.UniqueID.NewWebID();
            comment.MemberID = member.MemberID;
            comment.Text = CommentText;
            comment.DTCreated = DateTime.Now;

            comment.Save();

            AjaxAAFComment ajaxComment = AjaxAAFComment.GetAAFCommentByAAFCommentIDWithJoin(comment.AskAFriendCommentID);

            return ajaxComment;
        }
        else
        {
            throw new Exception("CommentID doesnt match");
        }


    }

    /// <summary>
    /// set the page skin
    /// </summary>
    /// <param name="e"></param>
    protected override void OnPreInit(EventArgs e)
    {
        Master.SkinID = "AskAFriend";
        base.OnPreInit(e);
    }
}
