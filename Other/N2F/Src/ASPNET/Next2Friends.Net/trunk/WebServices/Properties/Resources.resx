<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Argument_AskQuestionNotExist" xml:space="preserve">
    <value>The question with ID = {0} does not exist.</value>
  </data>
  <data name="Argument_BadCredentials" xml:space="preserve">
    <value>Bad credentials. The member with the specified webMemberId and password does not exist.</value>
  </data>
  <data name="Argument_BadMeasureUnits" xml:space="preserve">
    <value>GeoMessage.MeasureUnits value should be either 1 for Feets or 2 for Meters.</value>
  </data>
  <data name="Argument_BadMessageEditor" xml:space="preserve">
    <value>The identifier of the message creator does not match the identifier of the user that is intending to edit the message.</value>
  </data>
  <data name="Argument_BadMessageRemover" xml:space="preserve">
    <value>The identifier of the message creator does not match the identifier of the user that is intending to remove the message.</value>
  </data>
  <data name="Argument_BadMessageType" xml:space="preserve">
    <value>GeoMessage.MessageType value should be either 1 for EntersTheArea, 2 for LeavesTheArea, or the combination of both.</value>
  </data>
  <data name="Argument_BlogEntryNotExist" xml:space="preserve">
    <value>The blog entry with the specified identifier does not exist.</value>
  </data>
  <data name="Argument_CurrentLocationIsNull" xml:space="preserve">
    <value>The value of the CurrentLocation property on message instance cannot be null.</value>
  </data>
  <data name="Argument_EmailAddressNotExist" xml:space="preserve">
    <value>The user with the specified email address {0} does not exist.</value>
  </data>
  <data name="Argument_InsertIntoFailed" xml:space="preserve">
    <value>Failed to insert a new record into the {0} table.</value>
  </data>
  <data name="Argument_InvalidAskMultipleSelectPhotoCount" xml:space="preserve">
    <value>At least 2 photos should be attached for MultipleSelect question.</value>
  </data>
  <data name="Argument_InvalidAskPhotoCount" xml:space="preserve">
    <value>At least 1 photo should be attached.</value>
  </data>
  <data name="Argument_InvalidAskQuestionID" xml:space="preserve">
    <value>Invalid askQuestionID = {0}.</value>
  </data>
  <data name="Argument_InvalidBase64PhotoString" xml:space="preserve">
    <value>That doesn't appear to be a valid image encoded as a Base64 String.</value>
  </data>
  <data name="Argument_InvalidBlogEntryEditor" xml:space="preserve">
    <value>The identifier of the blog entry creator does not match the identifier of the user that is intending to edit this blog entry.</value>
  </data>
  <data name="Argument_InvalidBlogEntryRemover" xml:space="preserve">
    <value>The identifier of the blog entry creator does not match the identifier of the user that is intending to remove this blog entry.</value>
  </data>
  <data name="Argument_InvalidBlogPhotoIdentifier" xml:space="preserve">
    <value>The photo with the specified identifier "{0}" does not exist or the specified user does not have access to it.</value>
  </data>
  <data name="Argument_InvalidBlogVideoIdentifier" xml:space="preserve">
    <value>The video with the specified identifier "{0}" does not exist or the specified user does not have access to it.</value>
  </data>
  <data name="Argument_InvalidIndexOrder" xml:space="preserve">
    <value>First photo - 1, Second photo - 2, Third photo - 3.</value>
  </data>
  <data name="Argument_InvalidPhotoCollectionModifier" xml:space="preserve">
    <value>The specified member cannot modify photo collection with webPhotoCollectionID = {0}.</value>
  </data>
  <data name="Argument_LongCollectionName" xml:space="preserve">
    <value>The collection name length should not exceed 50 characters.</value>
  </data>
  <data name="Argument_MemberNotExist" xml:space="preserve">
    <value>The user with the specified webMemberID = {0} does not exist.</value>
  </data>
  <data name="Argument_MessageNotExist" xml:space="preserve">
    <value>The message with the specified messageID does not exist.</value>
  </data>
  <data name="Argument_NoSqlParameterProps" xml:space="preserve">
    <value>The specified table does not contain any properties marked with [SqlParameter] attribute.</value>
  </data>
  <data name="Argument_NotNullablePropIsNull" xml:space="preserve">
    <value>The property {0} is marked as being not nullable but its value is null.</value>
  </data>
  <data name="Argument_NotSqlTable" xml:space="preserve">
    <value>The specified table should be marked with [SqlTable] attribute.</value>
  </data>
  <data name="Argument_QualifiedCoordinatesIsNull" xml:space="preserve">
    <value>The value of the CurrentLocation.QualifiedCoordinates property on message instance cannot be null.</value>
  </data>
  <data name="Argument_ReceiversIsNull" xml:space="preserve">
    <value>The value of the Receivers property on message instance cannot be null.</value>
  </data>
  <data name="InvalidOperation_InsertRecord" xml:space="preserve">
    <value>Failed to insert a new record into the {0} table.</value>
  </data>
  <data name="SnapUp_DefaultGalleryDescrpiption" xml:space="preserve">
    <value>Automatically generated gallery.</value>
  </data>
  <data name="SnapUp_DefaultGalleryName" xml:space="preserve">
    <value>Default Gallery</value>
  </data>
  <data name="Argument_InvalidImageResource" xml:space="preserve">
    <value>The resource at the specified url "{0}" is not an image.</value>
  </data>
  <data name="Argument_InvalidBlogEntryIdentifier" xml:space="preserve">
    <value>The blog entry with ID = {0} does not exist.</value>
  </data>
  <data name="Argument_InvalidCommentType" xml:space="preserve">
    <value>{0} does not contain any member associated with the specified commentType = {1}.</value>
  </data>
  <data name="Argument_InvalidCommentEditor" xml:space="preserve">
    <value>The identifier of the comment creator does not match the identifier of the user that is intending to edit this comment.</value>
  </data>
  <data name="Argument_InvalidCommentRemover" xml:space="preserve">
    <value>The identifier of the comment creator does not match the identifier of the user that is intending to remove this comment.</value>
  </data>
  <data name="Argument_InvalidFeedItemType" xml:space="preserve">
    <value>{0} does not contain any member associated with the specified feedItemType = {1}.</value>
  </data>
  <data name="Argument_FeedItemTypeNotSupported" xml:space="preserve">
    <value>The specified feedItemType = {0} is not supported.</value>
  </data>
</root>