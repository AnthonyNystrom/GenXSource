namespace WS_PhotoOrganise {

/* .\wsdl-h\PhotoOrganise.h
   Generated by wsdl2h 1.2.10 from .\wsdl\PhotoOrganise.wsdl and typemap.dat
   2008-04-13 12:50:24 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'WS/typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://tempuri.org/                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import ".\..\gsoap-2.7.10\gsoap\import/stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

PhotoOrganise = "http://tempuri.org/"
PhotoOrganise2 = "http://tempuri.org/AbstractTypes"

*/

//gsoap PhotoOrganise schema namespace:	http://tempuri.org/
//gsoap PhotoOrganise2 schema namespace:	http://tempuri.org/AbstractTypes
//gsoap PhotoOrganise schema elementForm:	qualified
//gsoap PhotoOrganise schema attributeForm:	unqualified
//gsoap PhotoOrganise2 schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
	struct soap *soap;
};


//  Forward declaration of class PhotoOrganise__ArrayOfPhotoCollectionItem.
class PhotoOrganise__ArrayOfPhotoCollectionItem;

//  Forward declaration of class PhotoOrganise__PhotoCollectionItem.
class PhotoOrganise__PhotoCollectionItem;

//  Forward declaration of class PhotoOrganise__ArrayOfPhotoItem.
class PhotoOrganise__ArrayOfPhotoItem;

//  Forward declaration of class PhotoOrganise__PhotoItem.
class PhotoOrganise__PhotoItem;

//  Forward declaration of class _PhotoOrganise__Login.
class _PhotoOrganise__Login;

//  Forward declaration of class _PhotoOrganise__LoginResponse.
class _PhotoOrganise__LoginResponse;

//  Forward declaration of class _PhotoOrganise__CreateNewCollection.
class _PhotoOrganise__CreateNewCollection;

//  Forward declaration of class _PhotoOrganise__CreateNewCollectionResponse.
class _PhotoOrganise__CreateNewCollectionResponse;

//  Forward declaration of class _PhotoOrganise__GetCollections.
class _PhotoOrganise__GetCollections;

//  Forward declaration of class _PhotoOrganise__GetCollectionsResponse.
class _PhotoOrganise__GetCollectionsResponse;

//  Forward declaration of class _PhotoOrganise__GetPhotosByCollection.
class _PhotoOrganise__GetPhotosByCollection;

//  Forward declaration of class _PhotoOrganise__GetPhotosByCollectionResponse.
class _PhotoOrganise__GetPhotosByCollectionResponse;

//  Forward declaration of class _PhotoOrganise__UploadPhoto.
class _PhotoOrganise__UploadPhoto;

//  Forward declaration of class _PhotoOrganise__UploadPhotoResponse.
class _PhotoOrganise__UploadPhotoResponse;

//  Forward declaration of class _PhotoOrganise__DeviceUploadPhoto.
class _PhotoOrganise__DeviceUploadPhoto;

//  Forward declaration of class _PhotoOrganise__DeviceUploadPhotoResponse.
class _PhotoOrganise__DeviceUploadPhotoResponse;

//  Forward declaration of class _PhotoOrganise__JavaUploadPhoto.
class _PhotoOrganise__JavaUploadPhoto;

//  Forward declaration of class _PhotoOrganise__JavaUploadPhotoResponse.
class _PhotoOrganise__JavaUploadPhotoResponse;

//  Forward declaration of class _PhotoOrganise__RenameCollection.
class _PhotoOrganise__RenameCollection;

//  Forward declaration of class _PhotoOrganise__RenameCollectionResponse.
class _PhotoOrganise__RenameCollectionResponse;

//  Forward declaration of class _PhotoOrganise__DeletePhoto.
class _PhotoOrganise__DeletePhoto;

//  Forward declaration of class _PhotoOrganise__DeletePhotoResponse.
class _PhotoOrganise__DeletePhotoResponse;

//  Forward declaration of class PhotoOrganise2StringArray.
class PhotoOrganise2StringArray;

/// "http://tempuri.org/":ArrayOfPhotoCollectionItem is a complexType.
class PhotoOrganise__ArrayOfPhotoCollectionItem
{ public:
/// Vector of PhotoOrganise__PhotoCollectionItem* with length 0..unbounded
    std::vector<PhotoOrganise__PhotoCollectionItem*> PhotoCollectionItem            0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PhotoCollectionItem is a complexType.
class PhotoOrganise__PhotoCollectionItem
{ public:
/// Element WebPhotoCollectionID of type xs:string.
    std::string*                         WebPhotoCollectionID           0;	///< Optional element.
/// Element Name of type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPhotoItem is a complexType.
class PhotoOrganise__ArrayOfPhotoItem
{ public:
/// Vector of PhotoOrganise__PhotoItem* with length 0..unbounded
    std::vector<PhotoOrganise__PhotoItem*> PhotoItem                      0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PhotoItem is a complexType.
class PhotoOrganise__PhotoItem
{ public:
/// Element WebPhotoID of type xs:string.
    std::string*                         WebPhotoID                     0;	///< Optional element.
/// Element MainPhotoURL of type xs:string.
    std::string*                         MainPhotoURL                   0;	///< Optional element.
/// Element ThumbnailURL of type xs:string.
    std::string*                         ThumbnailURL                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":Login of complexType.

/// "http://tempuri.org/":Login is a complexType.
class _PhotoOrganise__Login
{ public:
/// Element Email of type xs:string.
    std::string*                         Email                          0;	///< Optional element.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":LoginResponse of complexType.

/// "http://tempuri.org/":LoginResponse is a complexType.
class _PhotoOrganise__LoginResponse
{ public:
/// Element LoginResult of type xs:string.
    std::string*                         LoginResult                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":CreateNewCollection of complexType.

/// "http://tempuri.org/":CreateNewCollection is a complexType.
class _PhotoOrganise__CreateNewCollection
{ public:
/// Element NewFolderName of type xs:string.
    std::string*                         NewFolderName                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":CreateNewCollectionResponse of complexType.

/// "http://tempuri.org/":CreateNewCollectionResponse is a complexType.
class _PhotoOrganise__CreateNewCollectionResponse
{ public:
/// Element CreateNewCollectionResult of type xs:boolean.
    bool                                 CreateNewCollectionResult      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetCollections of complexType.

/// "http://tempuri.org/":GetCollections is a complexType.
class _PhotoOrganise__GetCollections
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetCollectionsResponse of complexType.

/// "http://tempuri.org/":GetCollectionsResponse is a complexType.
class _PhotoOrganise__GetCollectionsResponse
{ public:
/// Element GetCollectionsResult of type "http://tempuri.org/":ArrayOfPhotoCollectionItem.
    PhotoOrganise__ArrayOfPhotoCollectionItem*  GetCollectionsResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetPhotosByCollection of complexType.

/// "http://tempuri.org/":GetPhotosByCollection is a complexType.
class _PhotoOrganise__GetPhotosByCollection
{ public:
/// Element WebPhotoCollectionID of type xs:string.
    std::string*                         WebPhotoCollectionID           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetPhotosByCollectionResponse of complexType.

/// "http://tempuri.org/":GetPhotosByCollectionResponse is a complexType.
class _PhotoOrganise__GetPhotosByCollectionResponse
{ public:
/// Element GetPhotosByCollectionResult of type "http://tempuri.org/":ArrayOfPhotoItem.
    PhotoOrganise__ArrayOfPhotoItem*     GetPhotosByCollectionResult    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":UploadPhoto of complexType.

/// "http://tempuri.org/":UploadPhoto is a complexType.
class _PhotoOrganise__UploadPhoto
{ public:
/// Element WebPhotoCollectionID of type xs:string.
    std::string*                         WebPhotoCollectionID           0;	///< Optional element.
/// Element MainPhotoFilebytes of type xs:base64Binary.
    xsd__base64Binary*                   MainPhotoFilebytes             0;	///< Optional element.
/// Element TakenDT of type xs:dateTime.
    time_t                               TakenDT                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":UploadPhotoResponse of complexType.

/// "http://tempuri.org/":UploadPhotoResponse is a complexType.
class _PhotoOrganise__UploadPhotoResponse
{ public:
/// Element UploadPhotoResult of type xs:boolean.
    bool                                 UploadPhotoResult              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":DeviceUploadPhoto of complexType.

/// "http://tempuri.org/":DeviceUploadPhoto is a complexType.
class _PhotoOrganise__DeviceUploadPhoto
{ public:
/// Element WebMemberID of type xs:string.
    std::string*                         WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    std::string*                         WebPassword                    0;	///< Optional element.
/// Element Base64StringPhoto of type xs:string.
    std::string*                         Base64StringPhoto              0;	///< Optional element.
/// Element DateTime of type xs:string.
    std::string*                         DateTime                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":DeviceUploadPhotoResponse of complexType.

/// "http://tempuri.org/":DeviceUploadPhotoResponse is a complexType.
class _PhotoOrganise__DeviceUploadPhotoResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":JavaUploadPhoto of complexType.

/// "http://tempuri.org/":JavaUploadPhoto is a complexType.
class _PhotoOrganise__JavaUploadPhoto
{ public:
/// Element EncryptedWebMemberID of type xs:string.
    std::string*                         EncryptedWebMemberID           0;	///< Optional element.
/// Element WebPhotoCollectionID of type xs:string.
    std::string*                         WebPhotoCollectionID           0;	///< Optional element.
/// Element Base64StringPhoto of type xs:string.
    std::string*                         Base64StringPhoto              0;	///< Optional element.
/// Element DateTime of type xs:string.
    std::string*                         DateTime                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":JavaUploadPhotoResponse of complexType.

/// "http://tempuri.org/":JavaUploadPhotoResponse is a complexType.
class _PhotoOrganise__JavaUploadPhotoResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":RenameCollection of complexType.

/// "http://tempuri.org/":RenameCollection is a complexType.
class _PhotoOrganise__RenameCollection
{ public:
/// Element WebPhotoCollectionID of type xs:string.
    std::string*                         WebPhotoCollectionID           0;	///< Optional element.
/// Element NewName of type xs:string.
    std::string*                         NewName                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":RenameCollectionResponse of complexType.

/// "http://tempuri.org/":RenameCollectionResponse is a complexType.
class _PhotoOrganise__RenameCollectionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":DeletePhoto of complexType.

/// "http://tempuri.org/":DeletePhoto is a complexType.
class _PhotoOrganise__DeletePhoto
{ public:
/// Element WebPhotoID of type xs:string.
    std::string*                         WebPhotoID                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":DeletePhotoResponse of complexType.

/// "http://tempuri.org/":DeletePhotoResponse is a complexType.
class _PhotoOrganise__DeletePhotoResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/AbstractTypes":StringArray is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
class PhotoOrganise2StringArray
{ public:
/// Pointer to array of std::string.
    std::string                         *__ptrString                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// Element "http://tempuri.org/":string of type xs:string.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":boolean of type xs:boolean.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":ArrayOfPhotoCollectionItem of type "http://tempuri.org/":ArrayOfPhotoCollectionItem.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":ArrayOfPhotoItem of type "http://tempuri.org/":ArrayOfPhotoItem.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap PhotoOrganise3 service name:	PhotoOrganiseSoap 
//gsoap PhotoOrganise3 service type:	PhotoOrganiseSoap 
//gsoap PhotoOrganise3 service port:	http://next2friends.com:90/PhotoOrganise.asmx 
//gsoap PhotoOrganise3 service namespace:	http://tempuri.org/PhotoOrganiseSoap 
//gsoap PhotoOrganise3 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap PhotoOrganise4 service name:	PhotoOrganiseSoap12 
//gsoap PhotoOrganise4 service type:	PhotoOrganiseSoap 
//gsoap PhotoOrganise4 service port:	http://next2friends.com:90/PhotoOrganise.asmx 
//gsoap PhotoOrganise4 service namespace:	http://tempuri.org/PhotoOrganiseSoap12 
//gsoap PhotoOrganise4 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref PhotoOrganiseSoap
  - @ref PhotoOrganiseSoap12

*/

/**

@page PhotoOrganiseSoap Binding "PhotoOrganiseSoap"

@section PhotoOrganiseSoap_operations Operations of Binding  "PhotoOrganiseSoap"
  - @ref __PhotoOrganise3__Login
  - @ref __PhotoOrganise3__CreateNewCollection
  - @ref __PhotoOrganise3__GetCollections
  - @ref __PhotoOrganise3__GetPhotosByCollection
  - @ref __PhotoOrganise3__UploadPhoto
  - @ref __PhotoOrganise3__DeviceUploadPhoto
  - @ref __PhotoOrganise3__JavaUploadPhoto
  - @ref __PhotoOrganise3__RenameCollection
  - @ref __PhotoOrganise3__DeletePhoto

@section PhotoOrganiseSoap_ports Endpoints of Binding  "PhotoOrganiseSoap"
  - http://next2friends.com:90/PhotoOrganise.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page PhotoOrganiseSoap12 Binding "PhotoOrganiseSoap12"

@section PhotoOrganiseSoap12_operations Operations of Binding  "PhotoOrganiseSoap12"
  - @ref __PhotoOrganise4__Login
  - @ref __PhotoOrganise4__CreateNewCollection
  - @ref __PhotoOrganise4__GetCollections
  - @ref __PhotoOrganise4__GetPhotosByCollection
  - @ref __PhotoOrganise4__UploadPhoto
  - @ref __PhotoOrganise4__DeviceUploadPhoto
  - @ref __PhotoOrganise4__JavaUploadPhoto
  - @ref __PhotoOrganise4__RenameCollection
  - @ref __PhotoOrganise4__DeletePhoto

@section PhotoOrganiseSoap12_ports Endpoints of Binding  "PhotoOrganiseSoap12"
  - http://next2friends.com:90/PhotoOrganise.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * PhotoOrganiseSoap                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__Login                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__Login" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/Login"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__Login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__Login*              PhotoOrganise__Login,
    // response parameters:
    _PhotoOrganise__LoginResponse*      PhotoOrganise__LoginResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__Login(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__Login*              PhotoOrganise__Login,
    // response parameters:
    _PhotoOrganise__LoginResponse*      PhotoOrganise__LoginResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	Login document
//gsoap PhotoOrganise3 service method-encoding:	Login literal
//gsoap PhotoOrganise3 service method-action:	Login http://tempuri.org/Login
int __PhotoOrganise3__Login(
    _PhotoOrganise__Login*              PhotoOrganise__Login,	///< Request parameter
    _PhotoOrganise__LoginResponse*      PhotoOrganise__LoginResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__CreateNewCollection                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__CreateNewCollection" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/CreateNewCollection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__CreateNewCollection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__CreateNewCollection* PhotoOrganise__CreateNewCollection,
    // response parameters:
    _PhotoOrganise__CreateNewCollectionResponse* PhotoOrganise__CreateNewCollectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__CreateNewCollection(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__CreateNewCollection* PhotoOrganise__CreateNewCollection,
    // response parameters:
    _PhotoOrganise__CreateNewCollectionResponse* PhotoOrganise__CreateNewCollectionResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	CreateNewCollection document
//gsoap PhotoOrganise3 service method-encoding:	CreateNewCollection literal
//gsoap PhotoOrganise3 service method-action:	CreateNewCollection http://tempuri.org/CreateNewCollection
int __PhotoOrganise3__CreateNewCollection(
    _PhotoOrganise__CreateNewCollection* PhotoOrganise__CreateNewCollection,	///< Request parameter
    _PhotoOrganise__CreateNewCollectionResponse* PhotoOrganise__CreateNewCollectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__GetCollections                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__GetCollections" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetCollections"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__GetCollections(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__GetCollections*     PhotoOrganise__GetCollections,
    // response parameters:
    _PhotoOrganise__GetCollectionsResponse* PhotoOrganise__GetCollectionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__GetCollections(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__GetCollections*     PhotoOrganise__GetCollections,
    // response parameters:
    _PhotoOrganise__GetCollectionsResponse* PhotoOrganise__GetCollectionsResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	GetCollections document
//gsoap PhotoOrganise3 service method-encoding:	GetCollections literal
//gsoap PhotoOrganise3 service method-action:	GetCollections http://tempuri.org/GetCollections
int __PhotoOrganise3__GetCollections(
    _PhotoOrganise__GetCollections*     PhotoOrganise__GetCollections,	///< Request parameter
    _PhotoOrganise__GetCollectionsResponse* PhotoOrganise__GetCollectionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__GetPhotosByCollection                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__GetPhotosByCollection" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetPhotosByCollection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__GetPhotosByCollection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__GetPhotosByCollection* PhotoOrganise__GetPhotosByCollection,
    // response parameters:
    _PhotoOrganise__GetPhotosByCollectionResponse* PhotoOrganise__GetPhotosByCollectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__GetPhotosByCollection(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__GetPhotosByCollection* PhotoOrganise__GetPhotosByCollection,
    // response parameters:
    _PhotoOrganise__GetPhotosByCollectionResponse* PhotoOrganise__GetPhotosByCollectionResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	GetPhotosByCollection document
//gsoap PhotoOrganise3 service method-encoding:	GetPhotosByCollection literal
//gsoap PhotoOrganise3 service method-action:	GetPhotosByCollection http://tempuri.org/GetPhotosByCollection
int __PhotoOrganise3__GetPhotosByCollection(
    _PhotoOrganise__GetPhotosByCollection* PhotoOrganise__GetPhotosByCollection,	///< Request parameter
    _PhotoOrganise__GetPhotosByCollectionResponse* PhotoOrganise__GetPhotosByCollectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__UploadPhoto                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__UploadPhoto" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/UploadPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__UploadPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__UploadPhoto*        PhotoOrganise__UploadPhoto,
    // response parameters:
    _PhotoOrganise__UploadPhotoResponse* PhotoOrganise__UploadPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__UploadPhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__UploadPhoto*        PhotoOrganise__UploadPhoto,
    // response parameters:
    _PhotoOrganise__UploadPhotoResponse* PhotoOrganise__UploadPhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	UploadPhoto document
//gsoap PhotoOrganise3 service method-encoding:	UploadPhoto literal
//gsoap PhotoOrganise3 service method-action:	UploadPhoto http://tempuri.org/UploadPhoto
int __PhotoOrganise3__UploadPhoto(
    _PhotoOrganise__UploadPhoto*        PhotoOrganise__UploadPhoto,	///< Request parameter
    _PhotoOrganise__UploadPhotoResponse* PhotoOrganise__UploadPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__DeviceUploadPhoto                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__DeviceUploadPhoto" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/DeviceUploadPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__DeviceUploadPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__DeviceUploadPhoto*  PhotoOrganise__DeviceUploadPhoto,
    // response parameters:
    _PhotoOrganise__DeviceUploadPhotoResponse* PhotoOrganise__DeviceUploadPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__DeviceUploadPhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__DeviceUploadPhoto*  PhotoOrganise__DeviceUploadPhoto,
    // response parameters:
    _PhotoOrganise__DeviceUploadPhotoResponse* PhotoOrganise__DeviceUploadPhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	DeviceUploadPhoto document
//gsoap PhotoOrganise3 service method-encoding:	DeviceUploadPhoto literal
//gsoap PhotoOrganise3 service method-action:	DeviceUploadPhoto http://tempuri.org/DeviceUploadPhoto
int __PhotoOrganise3__DeviceUploadPhoto(
    _PhotoOrganise__DeviceUploadPhoto*  PhotoOrganise__DeviceUploadPhoto,	///< Request parameter
    _PhotoOrganise__DeviceUploadPhotoResponse* PhotoOrganise__DeviceUploadPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__JavaUploadPhoto                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__JavaUploadPhoto" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/JavaUploadPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__JavaUploadPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__JavaUploadPhoto*    PhotoOrganise__JavaUploadPhoto,
    // response parameters:
    _PhotoOrganise__JavaUploadPhotoResponse* PhotoOrganise__JavaUploadPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__JavaUploadPhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__JavaUploadPhoto*    PhotoOrganise__JavaUploadPhoto,
    // response parameters:
    _PhotoOrganise__JavaUploadPhotoResponse* PhotoOrganise__JavaUploadPhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	JavaUploadPhoto document
//gsoap PhotoOrganise3 service method-encoding:	JavaUploadPhoto literal
//gsoap PhotoOrganise3 service method-action:	JavaUploadPhoto http://tempuri.org/JavaUploadPhoto
int __PhotoOrganise3__JavaUploadPhoto(
    _PhotoOrganise__JavaUploadPhoto*    PhotoOrganise__JavaUploadPhoto,	///< Request parameter
    _PhotoOrganise__JavaUploadPhotoResponse* PhotoOrganise__JavaUploadPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__RenameCollection                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__RenameCollection" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/RenameCollection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__RenameCollection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__RenameCollection*   PhotoOrganise__RenameCollection,
    // response parameters:
    _PhotoOrganise__RenameCollectionResponse* PhotoOrganise__RenameCollectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__RenameCollection(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__RenameCollection*   PhotoOrganise__RenameCollection,
    // response parameters:
    _PhotoOrganise__RenameCollectionResponse* PhotoOrganise__RenameCollectionResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	RenameCollection document
//gsoap PhotoOrganise3 service method-encoding:	RenameCollection literal
//gsoap PhotoOrganise3 service method-action:	RenameCollection http://tempuri.org/RenameCollection
int __PhotoOrganise3__RenameCollection(
    _PhotoOrganise__RenameCollection*   PhotoOrganise__RenameCollection,	///< Request parameter
    _PhotoOrganise__RenameCollectionResponse* PhotoOrganise__RenameCollectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise3__DeletePhoto                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise3__DeletePhoto" of service binding "PhotoOrganiseSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/DeletePhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise3__DeletePhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__DeletePhoto*        PhotoOrganise__DeletePhoto,
    // response parameters:
    _PhotoOrganise__DeletePhotoResponse* PhotoOrganise__DeletePhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise3__DeletePhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__DeletePhoto*        PhotoOrganise__DeletePhoto,
    // response parameters:
    _PhotoOrganise__DeletePhotoResponse* PhotoOrganise__DeletePhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoapProxy.h):
  class PhotoOrganiseSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise3 service method-style:	DeletePhoto document
//gsoap PhotoOrganise3 service method-encoding:	DeletePhoto literal
//gsoap PhotoOrganise3 service method-action:	DeletePhoto http://tempuri.org/DeletePhoto
int __PhotoOrganise3__DeletePhoto(
    _PhotoOrganise__DeletePhoto*        PhotoOrganise__DeletePhoto,	///< Request parameter
    _PhotoOrganise__DeletePhotoResponse* PhotoOrganise__DeletePhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * PhotoOrganiseSoap12                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__Login                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__Login" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/Login"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__Login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__Login*              PhotoOrganise__Login,
    // response parameters:
    _PhotoOrganise__LoginResponse*      PhotoOrganise__LoginResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__Login(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__Login*              PhotoOrganise__Login,
    // response parameters:
    _PhotoOrganise__LoginResponse*      PhotoOrganise__LoginResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	Login document
//gsoap PhotoOrganise4 service method-encoding:	Login literal
//gsoap PhotoOrganise4 service method-action:	Login http://tempuri.org/Login
int __PhotoOrganise4__Login(
    _PhotoOrganise__Login*              PhotoOrganise__Login,	///< Request parameter
    _PhotoOrganise__LoginResponse*      PhotoOrganise__LoginResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__CreateNewCollection                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__CreateNewCollection" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/CreateNewCollection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__CreateNewCollection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__CreateNewCollection* PhotoOrganise__CreateNewCollection,
    // response parameters:
    _PhotoOrganise__CreateNewCollectionResponse* PhotoOrganise__CreateNewCollectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__CreateNewCollection(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__CreateNewCollection* PhotoOrganise__CreateNewCollection,
    // response parameters:
    _PhotoOrganise__CreateNewCollectionResponse* PhotoOrganise__CreateNewCollectionResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	CreateNewCollection document
//gsoap PhotoOrganise4 service method-encoding:	CreateNewCollection literal
//gsoap PhotoOrganise4 service method-action:	CreateNewCollection http://tempuri.org/CreateNewCollection
int __PhotoOrganise4__CreateNewCollection(
    _PhotoOrganise__CreateNewCollection* PhotoOrganise__CreateNewCollection,	///< Request parameter
    _PhotoOrganise__CreateNewCollectionResponse* PhotoOrganise__CreateNewCollectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__GetCollections                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__GetCollections" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetCollections"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__GetCollections(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__GetCollections*     PhotoOrganise__GetCollections,
    // response parameters:
    _PhotoOrganise__GetCollectionsResponse* PhotoOrganise__GetCollectionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__GetCollections(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__GetCollections*     PhotoOrganise__GetCollections,
    // response parameters:
    _PhotoOrganise__GetCollectionsResponse* PhotoOrganise__GetCollectionsResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	GetCollections document
//gsoap PhotoOrganise4 service method-encoding:	GetCollections literal
//gsoap PhotoOrganise4 service method-action:	GetCollections http://tempuri.org/GetCollections
int __PhotoOrganise4__GetCollections(
    _PhotoOrganise__GetCollections*     PhotoOrganise__GetCollections,	///< Request parameter
    _PhotoOrganise__GetCollectionsResponse* PhotoOrganise__GetCollectionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__GetPhotosByCollection                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__GetPhotosByCollection" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetPhotosByCollection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__GetPhotosByCollection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__GetPhotosByCollection* PhotoOrganise__GetPhotosByCollection,
    // response parameters:
    _PhotoOrganise__GetPhotosByCollectionResponse* PhotoOrganise__GetPhotosByCollectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__GetPhotosByCollection(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__GetPhotosByCollection* PhotoOrganise__GetPhotosByCollection,
    // response parameters:
    _PhotoOrganise__GetPhotosByCollectionResponse* PhotoOrganise__GetPhotosByCollectionResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	GetPhotosByCollection document
//gsoap PhotoOrganise4 service method-encoding:	GetPhotosByCollection literal
//gsoap PhotoOrganise4 service method-action:	GetPhotosByCollection http://tempuri.org/GetPhotosByCollection
int __PhotoOrganise4__GetPhotosByCollection(
    _PhotoOrganise__GetPhotosByCollection* PhotoOrganise__GetPhotosByCollection,	///< Request parameter
    _PhotoOrganise__GetPhotosByCollectionResponse* PhotoOrganise__GetPhotosByCollectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__UploadPhoto                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__UploadPhoto" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/UploadPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__UploadPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__UploadPhoto*        PhotoOrganise__UploadPhoto,
    // response parameters:
    _PhotoOrganise__UploadPhotoResponse* PhotoOrganise__UploadPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__UploadPhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__UploadPhoto*        PhotoOrganise__UploadPhoto,
    // response parameters:
    _PhotoOrganise__UploadPhotoResponse* PhotoOrganise__UploadPhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	UploadPhoto document
//gsoap PhotoOrganise4 service method-encoding:	UploadPhoto literal
//gsoap PhotoOrganise4 service method-action:	UploadPhoto http://tempuri.org/UploadPhoto
int __PhotoOrganise4__UploadPhoto(
    _PhotoOrganise__UploadPhoto*        PhotoOrganise__UploadPhoto,	///< Request parameter
    _PhotoOrganise__UploadPhotoResponse* PhotoOrganise__UploadPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__DeviceUploadPhoto                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__DeviceUploadPhoto" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/DeviceUploadPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__DeviceUploadPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__DeviceUploadPhoto*  PhotoOrganise__DeviceUploadPhoto,
    // response parameters:
    _PhotoOrganise__DeviceUploadPhotoResponse* PhotoOrganise__DeviceUploadPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__DeviceUploadPhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__DeviceUploadPhoto*  PhotoOrganise__DeviceUploadPhoto,
    // response parameters:
    _PhotoOrganise__DeviceUploadPhotoResponse* PhotoOrganise__DeviceUploadPhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	DeviceUploadPhoto document
//gsoap PhotoOrganise4 service method-encoding:	DeviceUploadPhoto literal
//gsoap PhotoOrganise4 service method-action:	DeviceUploadPhoto http://tempuri.org/DeviceUploadPhoto
int __PhotoOrganise4__DeviceUploadPhoto(
    _PhotoOrganise__DeviceUploadPhoto*  PhotoOrganise__DeviceUploadPhoto,	///< Request parameter
    _PhotoOrganise__DeviceUploadPhotoResponse* PhotoOrganise__DeviceUploadPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__JavaUploadPhoto                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__JavaUploadPhoto" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/JavaUploadPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__JavaUploadPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__JavaUploadPhoto*    PhotoOrganise__JavaUploadPhoto,
    // response parameters:
    _PhotoOrganise__JavaUploadPhotoResponse* PhotoOrganise__JavaUploadPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__JavaUploadPhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__JavaUploadPhoto*    PhotoOrganise__JavaUploadPhoto,
    // response parameters:
    _PhotoOrganise__JavaUploadPhotoResponse* PhotoOrganise__JavaUploadPhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	JavaUploadPhoto document
//gsoap PhotoOrganise4 service method-encoding:	JavaUploadPhoto literal
//gsoap PhotoOrganise4 service method-action:	JavaUploadPhoto http://tempuri.org/JavaUploadPhoto
int __PhotoOrganise4__JavaUploadPhoto(
    _PhotoOrganise__JavaUploadPhoto*    PhotoOrganise__JavaUploadPhoto,	///< Request parameter
    _PhotoOrganise__JavaUploadPhotoResponse* PhotoOrganise__JavaUploadPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__RenameCollection                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__RenameCollection" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/RenameCollection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__RenameCollection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__RenameCollection*   PhotoOrganise__RenameCollection,
    // response parameters:
    _PhotoOrganise__RenameCollectionResponse* PhotoOrganise__RenameCollectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__RenameCollection(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__RenameCollection*   PhotoOrganise__RenameCollection,
    // response parameters:
    _PhotoOrganise__RenameCollectionResponse* PhotoOrganise__RenameCollectionResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	RenameCollection document
//gsoap PhotoOrganise4 service method-encoding:	RenameCollection literal
//gsoap PhotoOrganise4 service method-action:	RenameCollection http://tempuri.org/RenameCollection
int __PhotoOrganise4__RenameCollection(
    _PhotoOrganise__RenameCollection*   PhotoOrganise__RenameCollection,	///< Request parameter
    _PhotoOrganise__RenameCollectionResponse* PhotoOrganise__RenameCollectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __PhotoOrganise4__DeletePhoto                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__PhotoOrganise4__DeletePhoto" of service binding "PhotoOrganiseSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/DeletePhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___PhotoOrganise4__DeletePhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _PhotoOrganise__DeletePhoto*        PhotoOrganise__DeletePhoto,
    // response parameters:
    _PhotoOrganise__DeletePhotoResponse* PhotoOrganise__DeletePhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __PhotoOrganise4__DeletePhoto(
    struct soap *soap,
    // request parameters:
    _PhotoOrganise__DeletePhoto*        PhotoOrganise__DeletePhoto,
    // response parameters:
    _PhotoOrganise__DeletePhotoResponse* PhotoOrganise__DeletePhotoResponse
  );
@endcode

C++ proxy class (defined in soapPhotoOrganiseSoap12Proxy.h):
  class PhotoOrganiseSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap PhotoOrganise4 service method-style:	DeletePhoto document
//gsoap PhotoOrganise4 service method-encoding:	DeletePhoto literal
//gsoap PhotoOrganise4 service method-action:	DeletePhoto http://tempuri.org/DeletePhoto
int __PhotoOrganise4__DeletePhoto(
    _PhotoOrganise__DeletePhoto*        PhotoOrganise__DeletePhoto,	///< Request parameter
    _PhotoOrganise__DeletePhotoResponse* PhotoOrganise__DeletePhotoResponse	///< Response parameter
);

/* End of .\wsdl-h\PhotoOrganise.h */

}	// end of WS_PhotoOrganise namespace
