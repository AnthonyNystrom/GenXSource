/* WS_MemberService_v3Client.cpp
   Generated by gSOAP 2.7.10 from .\wsdl-h\MemberService.v3.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "WS_MemberService_v3H.h"

namespace WS_MemberService_v3 {

SOAP_SOURCE_STAMP("@(#) WS_MemberService_v3Client.cpp ver 2.7.10 2008-05-06 23:33:55 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV32__CheckUserExists(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__CheckUserExists *MemberServiceV3__CheckUserExists, _MemberServiceV3__CheckUserExistsResponse *MemberServiceV3__CheckUserExistsResponse)
{	struct __MemberServiceV32__CheckUserExists soap_tmp___MemberServiceV32__CheckUserExists;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/CheckUserExists";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV32__CheckUserExists.MemberServiceV3__CheckUserExists = MemberServiceV3__CheckUserExists;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV32__CheckUserExists(soap, &soap_tmp___MemberServiceV32__CheckUserExists);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV32__CheckUserExists(soap, &soap_tmp___MemberServiceV32__CheckUserExists, "-MemberServiceV32:CheckUserExists", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV32__CheckUserExists(soap, &soap_tmp___MemberServiceV32__CheckUserExists, "-MemberServiceV32:CheckUserExists", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__CheckUserExistsResponse)
		return soap_closesock(soap);
	MemberServiceV3__CheckUserExistsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__CheckUserExistsResponse->soap_get(soap, "MemberServiceV3:CheckUserExistsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV32__GetEncryptionKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__GetEncryptionKey *MemberServiceV3__GetEncryptionKey, _MemberServiceV3__GetEncryptionKeyResponse *MemberServiceV3__GetEncryptionKeyResponse)
{	struct __MemberServiceV32__GetEncryptionKey soap_tmp___MemberServiceV32__GetEncryptionKey;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/GetEncryptionKey";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV32__GetEncryptionKey.MemberServiceV3__GetEncryptionKey = MemberServiceV3__GetEncryptionKey;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV32__GetEncryptionKey(soap, &soap_tmp___MemberServiceV32__GetEncryptionKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV32__GetEncryptionKey(soap, &soap_tmp___MemberServiceV32__GetEncryptionKey, "-MemberServiceV32:GetEncryptionKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV32__GetEncryptionKey(soap, &soap_tmp___MemberServiceV32__GetEncryptionKey, "-MemberServiceV32:GetEncryptionKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__GetEncryptionKeyResponse)
		return soap_closesock(soap);
	MemberServiceV3__GetEncryptionKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__GetEncryptionKeyResponse->soap_get(soap, "MemberServiceV3:GetEncryptionKeyResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV32__GetMemberID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__GetMemberID *MemberServiceV3__GetMemberID, _MemberServiceV3__GetMemberIDResponse *MemberServiceV3__GetMemberIDResponse)
{	struct __MemberServiceV32__GetMemberID soap_tmp___MemberServiceV32__GetMemberID;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/GetMemberID";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV32__GetMemberID.MemberServiceV3__GetMemberID = MemberServiceV3__GetMemberID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV32__GetMemberID(soap, &soap_tmp___MemberServiceV32__GetMemberID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV32__GetMemberID(soap, &soap_tmp___MemberServiceV32__GetMemberID, "-MemberServiceV32:GetMemberID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV32__GetMemberID(soap, &soap_tmp___MemberServiceV32__GetMemberID, "-MemberServiceV32:GetMemberID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__GetMemberIDResponse)
		return soap_closesock(soap);
	MemberServiceV3__GetMemberIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__GetMemberIDResponse->soap_get(soap, "MemberServiceV3:GetMemberIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV32__GetTagID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__GetTagID *MemberServiceV3__GetTagID, _MemberServiceV3__GetTagIDResponse *MemberServiceV3__GetTagIDResponse)
{	struct __MemberServiceV32__GetTagID soap_tmp___MemberServiceV32__GetTagID;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/GetTagID";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV32__GetTagID.MemberServiceV3__GetTagID = MemberServiceV3__GetTagID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV32__GetTagID(soap, &soap_tmp___MemberServiceV32__GetTagID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV32__GetTagID(soap, &soap_tmp___MemberServiceV32__GetTagID, "-MemberServiceV32:GetTagID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV32__GetTagID(soap, &soap_tmp___MemberServiceV32__GetTagID, "-MemberServiceV32:GetTagID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__GetTagIDResponse)
		return soap_closesock(soap);
	MemberServiceV3__GetTagIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__GetTagIDResponse->soap_get(soap, "MemberServiceV3:GetTagIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV32__RemindPassword(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__RemindPassword *MemberServiceV3__RemindPassword, _MemberServiceV3__RemindPasswordResponse *MemberServiceV3__RemindPasswordResponse)
{	struct __MemberServiceV32__RemindPassword soap_tmp___MemberServiceV32__RemindPassword;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/RemindPassword";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV32__RemindPassword.MemberServiceV3__RemindPassword = MemberServiceV3__RemindPassword;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV32__RemindPassword(soap, &soap_tmp___MemberServiceV32__RemindPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV32__RemindPassword(soap, &soap_tmp___MemberServiceV32__RemindPassword, "-MemberServiceV32:RemindPassword", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV32__RemindPassword(soap, &soap_tmp___MemberServiceV32__RemindPassword, "-MemberServiceV32:RemindPassword", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__RemindPasswordResponse)
		return soap_closesock(soap);
	MemberServiceV3__RemindPasswordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__RemindPasswordResponse->soap_get(soap, "MemberServiceV3:RemindPasswordResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV33__CheckUserExists(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__CheckUserExists *MemberServiceV3__CheckUserExists, _MemberServiceV3__CheckUserExistsResponse *MemberServiceV3__CheckUserExistsResponse)
{	struct __MemberServiceV33__CheckUserExists soap_tmp___MemberServiceV33__CheckUserExists;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/CheckUserExists";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV33__CheckUserExists.MemberServiceV3__CheckUserExists = MemberServiceV3__CheckUserExists;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV33__CheckUserExists(soap, &soap_tmp___MemberServiceV33__CheckUserExists);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV33__CheckUserExists(soap, &soap_tmp___MemberServiceV33__CheckUserExists, "-MemberServiceV33:CheckUserExists", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV33__CheckUserExists(soap, &soap_tmp___MemberServiceV33__CheckUserExists, "-MemberServiceV33:CheckUserExists", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__CheckUserExistsResponse)
		return soap_closesock(soap);
	MemberServiceV3__CheckUserExistsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__CheckUserExistsResponse->soap_get(soap, "MemberServiceV3:CheckUserExistsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV33__GetEncryptionKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__GetEncryptionKey *MemberServiceV3__GetEncryptionKey, _MemberServiceV3__GetEncryptionKeyResponse *MemberServiceV3__GetEncryptionKeyResponse)
{	struct __MemberServiceV33__GetEncryptionKey soap_tmp___MemberServiceV33__GetEncryptionKey;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/GetEncryptionKey";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV33__GetEncryptionKey.MemberServiceV3__GetEncryptionKey = MemberServiceV3__GetEncryptionKey;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV33__GetEncryptionKey(soap, &soap_tmp___MemberServiceV33__GetEncryptionKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV33__GetEncryptionKey(soap, &soap_tmp___MemberServiceV33__GetEncryptionKey, "-MemberServiceV33:GetEncryptionKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV33__GetEncryptionKey(soap, &soap_tmp___MemberServiceV33__GetEncryptionKey, "-MemberServiceV33:GetEncryptionKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__GetEncryptionKeyResponse)
		return soap_closesock(soap);
	MemberServiceV3__GetEncryptionKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__GetEncryptionKeyResponse->soap_get(soap, "MemberServiceV3:GetEncryptionKeyResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV33__GetMemberID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__GetMemberID *MemberServiceV3__GetMemberID, _MemberServiceV3__GetMemberIDResponse *MemberServiceV3__GetMemberIDResponse)
{	struct __MemberServiceV33__GetMemberID soap_tmp___MemberServiceV33__GetMemberID;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/GetMemberID";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV33__GetMemberID.MemberServiceV3__GetMemberID = MemberServiceV3__GetMemberID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV33__GetMemberID(soap, &soap_tmp___MemberServiceV33__GetMemberID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV33__GetMemberID(soap, &soap_tmp___MemberServiceV33__GetMemberID, "-MemberServiceV33:GetMemberID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV33__GetMemberID(soap, &soap_tmp___MemberServiceV33__GetMemberID, "-MemberServiceV33:GetMemberID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__GetMemberIDResponse)
		return soap_closesock(soap);
	MemberServiceV3__GetMemberIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__GetMemberIDResponse->soap_get(soap, "MemberServiceV3:GetMemberIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV33__GetTagID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__GetTagID *MemberServiceV3__GetTagID, _MemberServiceV3__GetTagIDResponse *MemberServiceV3__GetTagIDResponse)
{	struct __MemberServiceV33__GetTagID soap_tmp___MemberServiceV33__GetTagID;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/GetTagID";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV33__GetTagID.MemberServiceV3__GetTagID = MemberServiceV3__GetTagID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV33__GetTagID(soap, &soap_tmp___MemberServiceV33__GetTagID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV33__GetTagID(soap, &soap_tmp___MemberServiceV33__GetTagID, "-MemberServiceV33:GetTagID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV33__GetTagID(soap, &soap_tmp___MemberServiceV33__GetTagID, "-MemberServiceV33:GetTagID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__GetTagIDResponse)
		return soap_closesock(soap);
	MemberServiceV3__GetTagIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__GetTagIDResponse->soap_get(soap, "MemberServiceV3:GetTagIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___MemberServiceV33__RemindPassword(struct soap *soap, const char *soap_endpoint, const char *soap_action, _MemberServiceV3__RemindPassword *MemberServiceV3__RemindPassword, _MemberServiceV3__RemindPasswordResponse *MemberServiceV3__RemindPasswordResponse)
{	struct __MemberServiceV33__RemindPassword soap_tmp___MemberServiceV33__RemindPassword;
	if (!soap_endpoint)
		soap_endpoint = "http://next2friends.com:90/MemberService.asmx";
	if (!soap_action)
		soap_action = "http://www.next2friends.com/RemindPassword";
	soap->encodingStyle = NULL;
	soap_tmp___MemberServiceV33__RemindPassword.MemberServiceV3__RemindPassword = MemberServiceV3__RemindPassword;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___MemberServiceV33__RemindPassword(soap, &soap_tmp___MemberServiceV33__RemindPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___MemberServiceV33__RemindPassword(soap, &soap_tmp___MemberServiceV33__RemindPassword, "-MemberServiceV33:RemindPassword", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___MemberServiceV33__RemindPassword(soap, &soap_tmp___MemberServiceV33__RemindPassword, "-MemberServiceV33:RemindPassword", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!MemberServiceV3__RemindPasswordResponse)
		return soap_closesock(soap);
	MemberServiceV3__RemindPasswordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	MemberServiceV3__RemindPasswordResponse->soap_get(soap, "MemberServiceV3:RemindPasswordResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace WS_MemberService_v3


/* End of WS_MemberService_v3Client.cpp */
