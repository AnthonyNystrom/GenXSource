/* WS_PhotoOrganiseStub.h
   Generated by gSOAP 2.7.10 from .\wsdl-h\PhotoOrganise.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef WS_PhotoOrganiseStub_H
#define WS_PhotoOrganiseStub_H
#include <vector>
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"

namespace WS_PhotoOrganise {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_xsd__base64Binary
#define SOAP_TYPE_WS_PhotoOrganise_xsd__base64Binary (8)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_WS_PhotoOrganise_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() : __ptr(NULL), __size(0), id(NULL), type(NULL), options(NULL), soap(NULL) { }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__ArrayOfPhotoCollectionItem
#define SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__ArrayOfPhotoCollectionItem (13)
/* PhotoOrganise:ArrayOfPhotoCollectionItem */
class SOAP_CMAC PhotoOrganise__ArrayOfPhotoCollectionItem
{
public:
	std::vector<class PhotoOrganise__PhotoCollectionItem * >PhotoCollectionItem;	/* optional element of type PhotoOrganise:PhotoCollectionItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__ArrayOfPhotoCollectionItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         PhotoOrganise__ArrayOfPhotoCollectionItem() : soap(NULL) { }
	virtual ~PhotoOrganise__ArrayOfPhotoCollectionItem() { }
};
#endif

#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__PhotoCollectionItem
#define SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__PhotoCollectionItem (14)
/* PhotoOrganise:PhotoCollectionItem */
class SOAP_CMAC PhotoOrganise__PhotoCollectionItem
{
public:
	std::string *WebPhotoCollectionID;	/* optional element of type xsd:string */
	std::string *Name;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__PhotoCollectionItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         PhotoOrganise__PhotoCollectionItem() : WebPhotoCollectionID(NULL), Name(NULL), soap(NULL) { }
	virtual ~PhotoOrganise__PhotoCollectionItem() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__ArrayOfPhotoItem
#define SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__ArrayOfPhotoItem (15)
/* PhotoOrganise:ArrayOfPhotoItem */
class SOAP_CMAC PhotoOrganise__ArrayOfPhotoItem
{
public:
	std::vector<class PhotoOrganise__PhotoItem * >PhotoItem;	/* optional element of type PhotoOrganise:PhotoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__ArrayOfPhotoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         PhotoOrganise__ArrayOfPhotoItem() : soap(NULL) { }
	virtual ~PhotoOrganise__ArrayOfPhotoItem() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__PhotoItem
#define SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__PhotoItem (16)
/* PhotoOrganise:PhotoItem */
class SOAP_CMAC PhotoOrganise__PhotoItem
{
public:
	std::string *WebPhotoID;	/* optional element of type xsd:string */
	std::string *MainPhotoURL;	/* optional element of type xsd:string */
	std::string *ThumbnailURL;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise__PhotoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         PhotoOrganise__PhotoItem() : WebPhotoID(NULL), MainPhotoURL(NULL), ThumbnailURL(NULL), soap(NULL) { }
	virtual ~PhotoOrganise__PhotoItem() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__Login
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__Login (17)
/* PhotoOrganise:Login */
class SOAP_CMAC _PhotoOrganise__Login
{
public:
	std::string *Email;	/* optional element of type xsd:string */
	std::string *Password;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__Login */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__Login() : Email(NULL), Password(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__Login() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__LoginResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__LoginResponse (18)
/* PhotoOrganise:LoginResponse */
class SOAP_CMAC _PhotoOrganise__LoginResponse
{
public:
	std::string *LoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__LoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__LoginResponse() : LoginResult(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__LoginResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__CreateNewCollection
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__CreateNewCollection (19)
/* PhotoOrganise:CreateNewCollection */
class SOAP_CMAC _PhotoOrganise__CreateNewCollection
{
public:
	std::string *NewFolderName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__CreateNewCollection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__CreateNewCollection() : NewFolderName(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__CreateNewCollection() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__CreateNewCollectionResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__CreateNewCollectionResponse (20)
/* PhotoOrganise:CreateNewCollectionResponse */
class SOAP_CMAC _PhotoOrganise__CreateNewCollectionResponse
{
public:
	bool CreateNewCollectionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__CreateNewCollectionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__CreateNewCollectionResponse() : CreateNewCollectionResult((bool)0), soap(NULL) { }
	virtual ~_PhotoOrganise__CreateNewCollectionResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetCollections
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetCollections (21)
/* PhotoOrganise:GetCollections */
class SOAP_CMAC _PhotoOrganise__GetCollections
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetCollections */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__GetCollections() : soap(NULL) { }
	virtual ~_PhotoOrganise__GetCollections() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetCollectionsResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetCollectionsResponse (22)
/* PhotoOrganise:GetCollectionsResponse */
class SOAP_CMAC _PhotoOrganise__GetCollectionsResponse
{
public:
	PhotoOrganise__ArrayOfPhotoCollectionItem *GetCollectionsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type PhotoOrganise:ArrayOfPhotoCollectionItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetCollectionsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__GetCollectionsResponse() : GetCollectionsResult(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__GetCollectionsResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetPhotosByCollection
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetPhotosByCollection (23)
/* PhotoOrganise:GetPhotosByCollection */
class SOAP_CMAC _PhotoOrganise__GetPhotosByCollection
{
public:
	std::string *WebPhotoCollectionID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetPhotosByCollection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__GetPhotosByCollection() : WebPhotoCollectionID(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__GetPhotosByCollection() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetPhotosByCollectionResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetPhotosByCollectionResponse (24)
/* PhotoOrganise:GetPhotosByCollectionResponse */
class SOAP_CMAC _PhotoOrganise__GetPhotosByCollectionResponse
{
public:
	PhotoOrganise__ArrayOfPhotoItem *GetPhotosByCollectionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type PhotoOrganise:ArrayOfPhotoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__GetPhotosByCollectionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__GetPhotosByCollectionResponse() : GetPhotosByCollectionResult(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__GetPhotosByCollectionResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__UploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__UploadPhoto (25)
/* PhotoOrganise:UploadPhoto */
class SOAP_CMAC _PhotoOrganise__UploadPhoto
{
public:
	std::string *WebPhotoCollectionID;	/* optional element of type xsd:string */
	xsd__base64Binary *MainPhotoFilebytes;	/* optional element of type xsd:base64Binary */
	time_t TakenDT;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__UploadPhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__UploadPhoto() : WebPhotoCollectionID(NULL), MainPhotoFilebytes(NULL), TakenDT(0), soap(NULL) { }
	virtual ~_PhotoOrganise__UploadPhoto() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__UploadPhotoResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__UploadPhotoResponse (26)
/* PhotoOrganise:UploadPhotoResponse */
class SOAP_CMAC _PhotoOrganise__UploadPhotoResponse
{
public:
	bool UploadPhotoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__UploadPhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__UploadPhotoResponse() : UploadPhotoResult((bool)0), soap(NULL) { }
	virtual ~_PhotoOrganise__UploadPhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeviceUploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeviceUploadPhoto (27)
/* PhotoOrganise:DeviceUploadPhoto */
class SOAP_CMAC _PhotoOrganise__DeviceUploadPhoto
{
public:
	std::string *WebMemberID;	/* optional element of type xsd:string */
	std::string *WebPassword;	/* optional element of type xsd:string */
	std::string *Base64StringPhoto;	/* optional element of type xsd:string */
	std::string *DateTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeviceUploadPhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__DeviceUploadPhoto() : WebMemberID(NULL), WebPassword(NULL), Base64StringPhoto(NULL), DateTime(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__DeviceUploadPhoto() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeviceUploadPhotoResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeviceUploadPhotoResponse (28)
/* PhotoOrganise:DeviceUploadPhotoResponse */
class SOAP_CMAC _PhotoOrganise__DeviceUploadPhotoResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeviceUploadPhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__DeviceUploadPhotoResponse() : soap(NULL) { }
	virtual ~_PhotoOrganise__DeviceUploadPhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__JavaUploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__JavaUploadPhoto (29)
/* PhotoOrganise:JavaUploadPhoto */
class SOAP_CMAC _PhotoOrganise__JavaUploadPhoto
{
public:
	std::string *EncryptedWebMemberID;	/* optional element of type xsd:string */
	std::string *WebPhotoCollectionID;	/* optional element of type xsd:string */
	std::string *Base64StringPhoto;	/* optional element of type xsd:string */
	std::string *DateTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__JavaUploadPhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__JavaUploadPhoto() : EncryptedWebMemberID(NULL), WebPhotoCollectionID(NULL), Base64StringPhoto(NULL), DateTime(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__JavaUploadPhoto() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__JavaUploadPhotoResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__JavaUploadPhotoResponse (30)
/* PhotoOrganise:JavaUploadPhotoResponse */
class SOAP_CMAC _PhotoOrganise__JavaUploadPhotoResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__JavaUploadPhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__JavaUploadPhotoResponse() : soap(NULL) { }
	virtual ~_PhotoOrganise__JavaUploadPhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__RenameCollection
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__RenameCollection (31)
/* PhotoOrganise:RenameCollection */
class SOAP_CMAC _PhotoOrganise__RenameCollection
{
public:
	std::string *WebPhotoCollectionID;	/* optional element of type xsd:string */
	std::string *NewName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__RenameCollection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__RenameCollection() : WebPhotoCollectionID(NULL), NewName(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__RenameCollection() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__RenameCollectionResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__RenameCollectionResponse (32)
/* PhotoOrganise:RenameCollectionResponse */
class SOAP_CMAC _PhotoOrganise__RenameCollectionResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__RenameCollectionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__RenameCollectionResponse() : soap(NULL) { }
	virtual ~_PhotoOrganise__RenameCollectionResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeletePhoto
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeletePhoto (33)
/* PhotoOrganise:DeletePhoto */
class SOAP_CMAC _PhotoOrganise__DeletePhoto
{
public:
	std::string *WebPhotoID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeletePhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__DeletePhoto() : WebPhotoID(NULL), soap(NULL) { }
	virtual ~_PhotoOrganise__DeletePhoto() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeletePhotoResponse
#define SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeletePhotoResponse (34)
/* PhotoOrganise:DeletePhotoResponse */
class SOAP_CMAC _PhotoOrganise__DeletePhotoResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_WS_PhotoOrganise__PhotoOrganise__DeletePhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _PhotoOrganise__DeletePhotoResponse() : soap(NULL) { }
	virtual ~_PhotoOrganise__DeletePhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise2StringArray
#define SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise2StringArray (35)
/* SOAP encoded array of xsd:string schema type: */
class SOAP_CMAC PhotoOrganise2StringArray
{
public:
	std::string *__ptrString;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_WS_PhotoOrganise_PhotoOrganise2StringArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         PhotoOrganise2StringArray() : __ptrString(NULL), __size(0), soap(NULL) { }
	virtual ~PhotoOrganise2StringArray() { }
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__Login
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__Login (50)
/* Operation wrapper: */
struct __PhotoOrganise3__Login
{
public:
	_PhotoOrganise__Login *PhotoOrganise__Login;	/* optional element of type PhotoOrganise:Login */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__CreateNewCollection
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__CreateNewCollection (54)
/* Operation wrapper: */
struct __PhotoOrganise3__CreateNewCollection
{
public:
	_PhotoOrganise__CreateNewCollection *PhotoOrganise__CreateNewCollection;	/* optional element of type PhotoOrganise:CreateNewCollection */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__GetCollections
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__GetCollections (58)
/* Operation wrapper: */
struct __PhotoOrganise3__GetCollections
{
public:
	_PhotoOrganise__GetCollections *PhotoOrganise__GetCollections;	/* optional element of type PhotoOrganise:GetCollections */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__GetPhotosByCollection
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__GetPhotosByCollection (62)
/* Operation wrapper: */
struct __PhotoOrganise3__GetPhotosByCollection
{
public:
	_PhotoOrganise__GetPhotosByCollection *PhotoOrganise__GetPhotosByCollection;	/* optional element of type PhotoOrganise:GetPhotosByCollection */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__UploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__UploadPhoto (66)
/* Operation wrapper: */
struct __PhotoOrganise3__UploadPhoto
{
public:
	_PhotoOrganise__UploadPhoto *PhotoOrganise__UploadPhoto;	/* optional element of type PhotoOrganise:UploadPhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__DeviceUploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__DeviceUploadPhoto (70)
/* Operation wrapper: */
struct __PhotoOrganise3__DeviceUploadPhoto
{
public:
	_PhotoOrganise__DeviceUploadPhoto *PhotoOrganise__DeviceUploadPhoto;	/* optional element of type PhotoOrganise:DeviceUploadPhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__JavaUploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__JavaUploadPhoto (74)
/* Operation wrapper: */
struct __PhotoOrganise3__JavaUploadPhoto
{
public:
	_PhotoOrganise__JavaUploadPhoto *PhotoOrganise__JavaUploadPhoto;	/* optional element of type PhotoOrganise:JavaUploadPhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__RenameCollection
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__RenameCollection (78)
/* Operation wrapper: */
struct __PhotoOrganise3__RenameCollection
{
public:
	_PhotoOrganise__RenameCollection *PhotoOrganise__RenameCollection;	/* optional element of type PhotoOrganise:RenameCollection */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__DeletePhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise3__DeletePhoto (82)
/* Operation wrapper: */
struct __PhotoOrganise3__DeletePhoto
{
public:
	_PhotoOrganise__DeletePhoto *PhotoOrganise__DeletePhoto;	/* optional element of type PhotoOrganise:DeletePhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__Login
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__Login (84)
/* Operation wrapper: */
struct __PhotoOrganise4__Login
{
public:
	_PhotoOrganise__Login *PhotoOrganise__Login;	/* optional element of type PhotoOrganise:Login */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__CreateNewCollection
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__CreateNewCollection (86)
/* Operation wrapper: */
struct __PhotoOrganise4__CreateNewCollection
{
public:
	_PhotoOrganise__CreateNewCollection *PhotoOrganise__CreateNewCollection;	/* optional element of type PhotoOrganise:CreateNewCollection */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__GetCollections
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__GetCollections (88)
/* Operation wrapper: */
struct __PhotoOrganise4__GetCollections
{
public:
	_PhotoOrganise__GetCollections *PhotoOrganise__GetCollections;	/* optional element of type PhotoOrganise:GetCollections */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__GetPhotosByCollection
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__GetPhotosByCollection (90)
/* Operation wrapper: */
struct __PhotoOrganise4__GetPhotosByCollection
{
public:
	_PhotoOrganise__GetPhotosByCollection *PhotoOrganise__GetPhotosByCollection;	/* optional element of type PhotoOrganise:GetPhotosByCollection */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__UploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__UploadPhoto (92)
/* Operation wrapper: */
struct __PhotoOrganise4__UploadPhoto
{
public:
	_PhotoOrganise__UploadPhoto *PhotoOrganise__UploadPhoto;	/* optional element of type PhotoOrganise:UploadPhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__DeviceUploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__DeviceUploadPhoto (94)
/* Operation wrapper: */
struct __PhotoOrganise4__DeviceUploadPhoto
{
public:
	_PhotoOrganise__DeviceUploadPhoto *PhotoOrganise__DeviceUploadPhoto;	/* optional element of type PhotoOrganise:DeviceUploadPhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__JavaUploadPhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__JavaUploadPhoto (96)
/* Operation wrapper: */
struct __PhotoOrganise4__JavaUploadPhoto
{
public:
	_PhotoOrganise__JavaUploadPhoto *PhotoOrganise__JavaUploadPhoto;	/* optional element of type PhotoOrganise:JavaUploadPhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__RenameCollection
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__RenameCollection (98)
/* Operation wrapper: */
struct __PhotoOrganise4__RenameCollection
{
public:
	_PhotoOrganise__RenameCollection *PhotoOrganise__RenameCollection;	/* optional element of type PhotoOrganise:RenameCollection */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__DeletePhoto
#define SOAP_TYPE_WS_PhotoOrganise___PhotoOrganise4__DeletePhoto (100)
/* Operation wrapper: */
struct __PhotoOrganise4__DeletePhoto
{
public:
	_PhotoOrganise__DeletePhoto *PhotoOrganise__DeletePhoto;	/* optional element of type PhotoOrganise:DeletePhoto */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Header
#define SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Header (101)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Code
#define SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Code (102)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Detail
#define SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Detail (104)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Reason
#define SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Reason (107)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Fault
#define SOAP_TYPE_WS_PhotoOrganise_SOAP_ENV__Fault (108)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_WS_PhotoOrganise__QName
#define SOAP_TYPE_WS_PhotoOrganise__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_WS_PhotoOrganise__XML
#define SOAP_TYPE_WS_PhotoOrganise__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__Login(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__Login *PhotoOrganise__Login, _PhotoOrganise__LoginResponse *PhotoOrganise__LoginResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__CreateNewCollection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__CreateNewCollection *PhotoOrganise__CreateNewCollection, _PhotoOrganise__CreateNewCollectionResponse *PhotoOrganise__CreateNewCollectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__GetCollections(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__GetCollections *PhotoOrganise__GetCollections, _PhotoOrganise__GetCollectionsResponse *PhotoOrganise__GetCollectionsResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__GetPhotosByCollection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__GetPhotosByCollection *PhotoOrganise__GetPhotosByCollection, _PhotoOrganise__GetPhotosByCollectionResponse *PhotoOrganise__GetPhotosByCollectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__UploadPhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__UploadPhoto *PhotoOrganise__UploadPhoto, _PhotoOrganise__UploadPhotoResponse *PhotoOrganise__UploadPhotoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__DeviceUploadPhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__DeviceUploadPhoto *PhotoOrganise__DeviceUploadPhoto, _PhotoOrganise__DeviceUploadPhotoResponse *PhotoOrganise__DeviceUploadPhotoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__JavaUploadPhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__JavaUploadPhoto *PhotoOrganise__JavaUploadPhoto, _PhotoOrganise__JavaUploadPhotoResponse *PhotoOrganise__JavaUploadPhotoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__RenameCollection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__RenameCollection *PhotoOrganise__RenameCollection, _PhotoOrganise__RenameCollectionResponse *PhotoOrganise__RenameCollectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise3__DeletePhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__DeletePhoto *PhotoOrganise__DeletePhoto, _PhotoOrganise__DeletePhotoResponse *PhotoOrganise__DeletePhotoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__Login(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__Login *PhotoOrganise__Login, _PhotoOrganise__LoginResponse *PhotoOrganise__LoginResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__CreateNewCollection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__CreateNewCollection *PhotoOrganise__CreateNewCollection, _PhotoOrganise__CreateNewCollectionResponse *PhotoOrganise__CreateNewCollectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__GetCollections(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__GetCollections *PhotoOrganise__GetCollections, _PhotoOrganise__GetCollectionsResponse *PhotoOrganise__GetCollectionsResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__GetPhotosByCollection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__GetPhotosByCollection *PhotoOrganise__GetPhotosByCollection, _PhotoOrganise__GetPhotosByCollectionResponse *PhotoOrganise__GetPhotosByCollectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__UploadPhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__UploadPhoto *PhotoOrganise__UploadPhoto, _PhotoOrganise__UploadPhotoResponse *PhotoOrganise__UploadPhotoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__DeviceUploadPhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__DeviceUploadPhoto *PhotoOrganise__DeviceUploadPhoto, _PhotoOrganise__DeviceUploadPhotoResponse *PhotoOrganise__DeviceUploadPhotoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__JavaUploadPhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__JavaUploadPhoto *PhotoOrganise__JavaUploadPhoto, _PhotoOrganise__JavaUploadPhotoResponse *PhotoOrganise__JavaUploadPhotoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__RenameCollection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__RenameCollection *PhotoOrganise__RenameCollection, _PhotoOrganise__RenameCollectionResponse *PhotoOrganise__RenameCollectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___PhotoOrganise4__DeletePhoto(struct soap *soap, const char *soap_endpoint, const char *soap_action, _PhotoOrganise__DeletePhoto *PhotoOrganise__DeletePhoto, _PhotoOrganise__DeletePhotoResponse *PhotoOrganise__DeletePhotoResponse);

} // namespace WS_PhotoOrganise


#endif

/* End of WS_PhotoOrganiseStub.h */
