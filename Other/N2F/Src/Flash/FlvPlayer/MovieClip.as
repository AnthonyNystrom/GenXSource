//****************************************************************************// ActionScript Standard Library// Movie Clip object//****************************************************************************dynamic intrinsic class MovieClip{	var useHandCursor:Boolean;	var enabled:Boolean;	var focusEnabled:Boolean;	var tabChildren:Boolean;	var tabEnabled:Boolean;	var tabIndex:Number;	var hitArea:Object;	var trackAsMenu:Boolean;	var _x:Number;	var _y:Number;	var _xmouse:Number;	var _ymouse:Number;	var _xscale:Number;	var _yscale:Number;	var _width:Number;	var _height:Number;	var _alpha:Number;	var _lockroot:Boolean;	var _visible:Boolean;	var _target:String;	var _rotation:Number;	var _name:String;	var _framesloaded:Number;	var _droptarget:String;	var _currentframe:Number;	var _totalframes:Number;	var _quality:String;	var _focusrect:Boolean;	var _soundbuftime:Number;	var _url:String;	var _parent:MovieClip;	function getURL(url:String,window:String,method:String):Void;	function unloadMovie():Void;	function loadVariables(url:String,method:String):Void;	function loadMovie(url:String,method:String):Void;	function attachMovie(id:String,name:String,depth:Number,initObject:Object):MovieClip;	function swapDepths(mc:Object):Void; // mc can be a String or an Integer	function localToGlobal(pt:Object):Void;	function globalToLocal(pt:Object):Void;	function hitTest():Boolean; // arguments can be either target or x/y/shapeFlag	function getBounds(bounds):Object;	function getBytesLoaded():Number;	function getBytesTotal():Number;	function attachAudio(id:Object):Void;	function attachVideo(id:Object):Void;	function getDepth():Number;	function getInstanceAtDepth(depth:Number):MovieClip;	function getNextHighestDepth():Number;	function setMask(mc:Object):Void; // mc can be a String or a MovieClip	function play():Void;	function stop():Void;	function nextFrame():Void;	function prevFrame():Void;	function gotoAndPlay(frame:Object):Void; // frame can be String or Number	function gotoAndStop(frame:Object):Void; // frame can be String or Number	function duplicateMovieClip(name:String,depth:Number,initObject:Object):MovieClip;	function removeMovieClip():Void;	function startDrag(lockCenter:Boolean,left:Number,top:Number,right:Number,bottom:Number):Void;	function stopDrag():Void;	function createEmptyMovieClip(name:String,depth:Number):MovieClip;	function beginFill(rgb:Number,alpha:Number):Void;	function beginGradientFill(fillType:String,colors:Array,alphas:Array,ratios:Array,matrix:Object):Void;	function moveTo(x:Number,y:Number):Void;	function lineTo(x:Number,y:Number):Void;	function curveTo(controlX:Number,controlY:Number,anchorX:Number,anchorY:Number):Void;	function lineStyle(thickness:Number,rgb:Number,alpha:Number):Void;	function endFill():Void;	function clear():Void;	function createTextField(instanceName:String,depth:Number,x:Number,y:Number,width:Number,height:Number):Void;	function getTextSnapshot():TextSnapshot;	function addListener(listener:Object):Boolean;	function removeListener(listener:Object):Boolean;		function alphaTo(destAlpha,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function brightnessTo(bright:Number,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function brightOffsetTo(percent:Number,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function colorTo(rgb:Number,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function colorTransformTo(ra:Number,rb:Number,ga:Number,gb:Number,ba:Number,bb:Number,aa:Number,ab:Number,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function contrastTo(percent:Number,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function ffTween(props):Void;	function frameTo(destFrame:Number, seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function getTweens():Number;	function invertColorTo(percent:Number,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function isTweening(prop:String):Boolean;	function isTweenLocked():Void;	function isTweenPaused(prop:String):Void;	function lockTween():Void;	function pauseAllTweens():Void;	function pauseTween(props):Void;	function rewTween(props):Void;	function rotateTo(destRotation,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function scaleTo(destScale,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function sizeTo(destSize,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function slideTo(destX,destY,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function stopAllTweens():Void;	function stopTween(props):Void;	function tintTo(rgb:Number,percent:Number,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function tween(props,pEnd,seconds:Number,animType:Object,delay:Number,callback:Object,extra1:Number,extra2:Number):Void;	function unlockTween():Void;	function unpauseAllTweens():Void;	function unpauseTween(props):Void;	function onData():Void;	function onDragOut():Void;	function onDragOver():Void;	function onEnterFrame():Void;	function onKeyDown():Void;	function onKeyUp():Void;	function onKillFocus(newFocus:Object):Void;	function onLoad():Void;	function onMouseDown():Void;	function onMouseMove():Void;	function onMouseUp():Void;	function onPress():Void;	function onRelease():Void;	function onReleaseOutside():Void;	function onRollOut():Void;	function onRollOver():Void;	function onSetFocus(oldFocus:Object):Void;	function onUnload():Void;}