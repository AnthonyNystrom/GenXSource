/* output\askafriendservice.h
   Generated by wsdl2h 1.2.10 from http://services.next2friends.com/n2fwebservices/askafriend.asmx?WSDL and typemap.dat
   2008-05-06 20:55:13 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'WS/typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://tempuri.org/                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://tempuri.org/"
ns2 = "http://tempuri.org/AbstractTypes"

*/

//gsoap ns1   schema namespace:	http://tempuri.org/
//gsoap ns2   schema namespace:	http://tempuri.org/AbstractTypes
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified
//gsoap ns2   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__ArrayOfString.
class ns1__ArrayOfString;

//  Forward declaration of class ns1__AskAFriendConfirm.
class ns1__AskAFriendConfirm;

//  Forward declaration of class ns1__ArrayOfPrivateAAFQuestion.
class ns1__ArrayOfPrivateAAFQuestion;

//  Forward declaration of class ns1__PrivateAAFQuestion.
class ns1__PrivateAAFQuestion;

//  Forward declaration of class ns1__ArrayOfAskAFriendQuestion.
class ns1__ArrayOfAskAFriendQuestion;

//  Forward declaration of class ns1__AskAFriendQuestion.
class ns1__AskAFriendQuestion;

//  Forward declaration of class ns1__AskAFriendResponse.
class ns1__AskAFriendResponse;

//  Forward declaration of class ns1__ArrayOfInt.
class ns1__ArrayOfInt;

//  Forward declaration of class ns1__ArrayOfAskAFriendComment.
class ns1__ArrayOfAskAFriendComment;

//  Forward declaration of class ns1__AskAFriendComment.
class ns1__AskAFriendComment;

//  Forward declaration of class _ns1__SubmitQuestion.
class _ns1__SubmitQuestion;

//  Forward declaration of class _ns1__SubmitQuestionResponse.
class _ns1__SubmitQuestionResponse;

//  Forward declaration of class _ns1__AttachPhoto.
class _ns1__AttachPhoto;

//  Forward declaration of class _ns1__AttachPhotoResponse.
class _ns1__AttachPhotoResponse;

//  Forward declaration of class _ns1__CompleteQuestion.
class _ns1__CompleteQuestion;

//  Forward declaration of class _ns1__CompleteQuestionResponse.
class _ns1__CompleteQuestionResponse;

//  Forward declaration of class _ns1__GetPrivateAAFQuestion.
class _ns1__GetPrivateAAFQuestion;

//  Forward declaration of class _ns1__GetPrivateAAFQuestionResponse.
class _ns1__GetPrivateAAFQuestionResponse;

//  Forward declaration of class _ns1__GetMyAAFQuestions.
class _ns1__GetMyAAFQuestions;

//  Forward declaration of class _ns1__GetMyAAFQuestionsResponse.
class _ns1__GetMyAAFQuestionsResponse;

//  Forward declaration of class _ns1__GetNewAAFQuestionCommentIDs.
class _ns1__GetNewAAFQuestionCommentIDs;

//  Forward declaration of class _ns1__GetNewAAFQuestionCommentIDsResponse.
class _ns1__GetNewAAFQuestionCommentIDsResponse;

//  Forward declaration of class _ns1__GetAAFResponse.
class _ns1__GetAAFResponse;

//  Forward declaration of class _ns1__GetAAFResponseResponse.
class _ns1__GetAAFResponseResponse;

//  Forward declaration of class _ns1__GetAAFComments.
class _ns1__GetAAFComments;

//  Forward declaration of class _ns1__GetAAFCommentsResponse.
class _ns1__GetAAFCommentsResponse;

//  Forward declaration of class StringArray.
class StringArray;

/// "http://tempuri.org/":ArrayOfString is a complexType.
class ns1__ArrayOfString
{ public:
/// Size of array of char* is 0..unbounded
    int                                  __sizestring                  ;
/// Pointer to array of length 0..unbounded
    char*                               *string                         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":AskAFriendConfirm is a complexType.
class ns1__AskAFriendConfirm
{ public:
/// Element AdvertURL of type xs:string.
    char*                                AdvertURL                      0;	///< Optional element.
/// Element AdvertImage of type xs:string.
    char*                                AdvertImage                    0;	///< Optional element.
/// Element WebAskAFriendID of type xs:string.
    char*                                WebAskAFriendID                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPrivateAAFQuestion is a complexType.
class ns1__ArrayOfPrivateAAFQuestion
{ public:
/// Size of array of ns1__PrivateAAFQuestion* is 0..unbounded
    int                                  __sizePrivateAAFQuestion      ;
/// Pointer to array of length 0..unbounded
    ns1__PrivateAAFQuestion*            *PrivateAAFQuestion             0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PrivateAAFQuestion is a complexType.
class ns1__PrivateAAFQuestion
{ public:
/// Element NickName of type xs:string.
    char*                                NickName                       0;	///< Optional element.
/// Element Question of type xs:string.
    char*                                Question                       0;	///< Optional element.
/// Element URL of type xs:string.
    char*                                URL                            0;	///< Optional element.
/// Element DateTimePosted of type xs:string.
    char*                                DateTimePosted                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfAskAFriendQuestion is a complexType.
class ns1__ArrayOfAskAFriendQuestion
{ public:
/// Size of array of ns1__AskAFriendQuestion* is 0..unbounded
    int                                  __sizeAskAFriendQuestion      ;
/// Pointer to array of length 0..unbounded
    ns1__AskAFriendQuestion*            *AskAFriendQuestion             0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":AskAFriendQuestion is a complexType.
class ns1__AskAFriendQuestion
{ public:
/// Element WebAskAFriendID of type xs:string.
    char*                                WebAskAFriendID                0;	///< Optional element.
/// Element Question of type xs:string.
    char*                                Question                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":AskAFriendResponse is a complexType.
class ns1__AskAFriendResponse
{ public:
/// Element WebAskAFriendID of type xs:string.
    char*                                WebAskAFriendID                0;	///< Optional element.
/// Element Question of type xs:string.
    char*                                Question                       0;	///< Optional element.
/// Element PhotoBase64Binary of type xs:string.
    char*                                PhotoBase64Binary              0;	///< Optional element.
/// Element ResponseValues of type "http://tempuri.org/":ArrayOfInt.
    ns1__ArrayOfInt*                     ResponseValues                 0;	///< Optional element.
/// Element Average of type xs:double.
    double                               Average                        1;	///< Required element.
/// Element ResponseType of type xs:int.
    int                                  ResponseType                   1;	///< Required element.
/// Element CustomResponses of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  CustomResponses                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfInt is a complexType.
class ns1__ArrayOfInt
{ public:
/// Size of array of int is 0..unbounded
    int                                  __sizeint_                    ;
/// Pointer to array of length 0..unbounded
    int                                 *int_                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfAskAFriendComment is a complexType.
class ns1__ArrayOfAskAFriendComment
{ public:
/// Size of array of ns1__AskAFriendComment* is 0..unbounded
    int                                  __sizeAskAFriendComment       ;
/// Pointer to array of length 0..unbounded
    ns1__AskAFriendComment*             *AskAFriendComment              0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":AskAFriendComment is a complexType.
class ns1__AskAFriendComment
{ public:
/// Element NickName of type xs:string.
    char*                                NickName                       0;	///< Optional element.
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebAskAFriendCommentID of type xs:string.
    char*                                WebAskAFriendCommentID         0;	///< Optional element.
/// Element Text of type xs:string.
    char*                                Text                           0;	///< Optional element.
/// Element DateTimePosted of type xs:string.
    char*                                DateTimePosted                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":SubmitQuestion of complexType.

/// "http://tempuri.org/":SubmitQuestion is a complexType.
class _ns1__SubmitQuestion
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// Element Question of type xs:string.
    char*                                Question                       0;	///< Optional element.
/// Element NumberOfPhotos of type xs:int.
    int                                  NumberOfPhotos                 1;	///< Required element.
/// Element ResponseType of type xs:int.
    int                                  ResponseType                   1;	///< Required element.
/// Element CustomResponses of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  CustomResponses                0;	///< Optional element.
/// Element Duration of type xs:int.
    int                                  Duration                       1;	///< Required element.
/// Element IsPrivate of type xs:boolean.
    bool                                 IsPrivate                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":SubmitQuestionResponse of complexType.

/// "http://tempuri.org/":SubmitQuestionResponse is a complexType.
class _ns1__SubmitQuestionResponse
{ public:
/// Element SubmitQuestionResult of type "http://tempuri.org/":AskAFriendConfirm.
    ns1__AskAFriendConfirm*              SubmitQuestionResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":AttachPhoto of complexType.

/// "http://tempuri.org/":AttachPhoto is a complexType.
class _ns1__AttachPhoto
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// Element WebAskAFriendID of type xs:string.
    char*                                WebAskAFriendID                0;	///< Optional element.
/// Element IndexOrder of type xs:int.
    int                                  IndexOrder                     1;	///< Required element.
/// Element PhotoBase64String of type xs:string.
    char*                                PhotoBase64String              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":AttachPhotoResponse of complexType.

/// "http://tempuri.org/":AttachPhotoResponse is a complexType.
class _ns1__AttachPhotoResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":CompleteQuestion of complexType.

/// "http://tempuri.org/":CompleteQuestion is a complexType.
class _ns1__CompleteQuestion
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// Element WebAskAFriendID of type xs:string.
    char*                                WebAskAFriendID                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":CompleteQuestionResponse of complexType.

/// "http://tempuri.org/":CompleteQuestionResponse is a complexType.
class _ns1__CompleteQuestionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetPrivateAAFQuestion of complexType.

/// "http://tempuri.org/":GetPrivateAAFQuestion is a complexType.
class _ns1__GetPrivateAAFQuestion
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetPrivateAAFQuestionResponse of complexType.

/// "http://tempuri.org/":GetPrivateAAFQuestionResponse is a complexType.
class _ns1__GetPrivateAAFQuestionResponse
{ public:
/// Element GetPrivateAAFQuestionResult of type "http://tempuri.org/":ArrayOfPrivateAAFQuestion.
    ns1__ArrayOfPrivateAAFQuestion*      GetPrivateAAFQuestionResult    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetMyAAFQuestions of complexType.

/// "http://tempuri.org/":GetMyAAFQuestions is a complexType.
class _ns1__GetMyAAFQuestions
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// Element LastWebAskAFriendID of type xs:string.
    char*                                LastWebAskAFriendID            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetMyAAFQuestionsResponse of complexType.

/// "http://tempuri.org/":GetMyAAFQuestionsResponse is a complexType.
class _ns1__GetMyAAFQuestionsResponse
{ public:
/// Element GetMyAAFQuestionsResult of type "http://tempuri.org/":ArrayOfAskAFriendQuestion.
    ns1__ArrayOfAskAFriendQuestion*      GetMyAAFQuestionsResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetNewAAFQuestionCommentIDs of complexType.

/// "http://tempuri.org/":GetNewAAFQuestionCommentIDs is a complexType.
class _ns1__GetNewAAFQuestionCommentIDs
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// Element WebAskAFriendIDs of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  WebAskAFriendIDs               0;	///< Optional element.
/// Element WebLastAskAFriendQuestionIDs of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  WebLastAskAFriendQuestionIDs   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetNewAAFQuestionCommentIDsResponse of complexType.

/// "http://tempuri.org/":GetNewAAFQuestionCommentIDsResponse is a complexType.
class _ns1__GetNewAAFQuestionCommentIDsResponse
{ public:
/// Element GetNewAAFQuestionCommentIDsResult of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  GetNewAAFQuestionCommentIDsResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetAAFResponse of complexType.

/// "http://tempuri.org/":GetAAFResponse is a complexType.
class _ns1__GetAAFResponse
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// Element WebAskAFriendID of type xs:string.
    char*                                WebAskAFriendID                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetAAFResponseResponse of complexType.

/// "http://tempuri.org/":GetAAFResponseResponse is a complexType.
class _ns1__GetAAFResponseResponse
{ public:
/// Element GetAAFResponseResult of type "http://tempuri.org/":AskAFriendResponse.
    ns1__AskAFriendResponse*             GetAAFResponseResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetAAFComments of complexType.

/// "http://tempuri.org/":GetAAFComments is a complexType.
class _ns1__GetAAFComments
{ public:
/// Element WebMemberID of type xs:string.
    char*                                WebMemberID                    0;	///< Optional element.
/// Element WebPassword of type xs:string.
    char*                                WebPassword                    0;	///< Optional element.
/// Element WebAskAFriendID of type xs:string.
    char*                                WebAskAFriendID                0;	///< Optional element.
/// Element LastWebAskAFriendCommentID of type xs:string.
    char*                                LastWebAskAFriendCommentID     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://tempuri.org/":GetAAFCommentsResponse of complexType.

/// "http://tempuri.org/":GetAAFCommentsResponse is a complexType.
class _ns1__GetAAFCommentsResponse
{ public:
/// Element GetAAFCommentsResult of type "http://tempuri.org/":ArrayOfAskAFriendComment.
    ns1__ArrayOfAskAFriendComment*       GetAAFCommentsResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/AbstractTypes":StringArray is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
class StringArray
{ public:
/// Pointer to array of char*.
    char*                               *__ptrString                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// Element "http://tempuri.org/":AskAFriendConfirm of type "http://tempuri.org/":AskAFriendConfirm.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":ArrayOfPrivateAAFQuestion of type "http://tempuri.org/":ArrayOfPrivateAAFQuestion.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":ArrayOfAskAFriendQuestion of type "http://tempuri.org/":ArrayOfAskAFriendQuestion.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":ArrayOfString of type "http://tempuri.org/":ArrayOfString.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":AskAFriendResponse of type "http://tempuri.org/":AskAFriendResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://tempuri.org/":ArrayOfAskAFriendComment of type "http://tempuri.org/":ArrayOfAskAFriendComment.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns3  service name:	AskAFriendWSSoap 
//gsoap ns3  service type:	AskAFriendWSSoap 
//gsoap ns3  service port:	http://services.next2friends.com/n2fwebservices/askafriend.asmx 
//gsoap ns3  service namespace:	http://tempuri.org/AskAFriendWSSoap 
//gsoap ns3  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns4  service name:	AskAFriendWSSoap12 
//gsoap ns4  service type:	AskAFriendWSSoap 
//gsoap ns4  service port:	http://services.next2friends.com/n2fwebservices/askafriend.asmx 
//gsoap ns4  service namespace:	http://tempuri.org/AskAFriendWSSoap12 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref AskAFriendWSSoap
  - @ref AskAFriendWSSoap12

*/

/**

@page AskAFriendWSSoap Binding "AskAFriendWSSoap"

@section AskAFriendWSSoap_operations Operations of Binding  "AskAFriendWSSoap"
  - @ref __ns3__SubmitQuestion
  - @ref __ns3__AttachPhoto
  - @ref __ns3__CompleteQuestion
  - @ref __ns3__GetPrivateAAFQuestion
  - @ref __ns3__GetMyAAFQuestions
  - @ref __ns3__GetNewAAFQuestionCommentIDs
  - @ref __ns3__GetAAFResponse
  - @ref __ns3__GetAAFComments

@section AskAFriendWSSoap_ports Endpoints of Binding  "AskAFriendWSSoap"
  - http://services.next2friends.com/n2fwebservices/askafriend.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page AskAFriendWSSoap12 Binding "AskAFriendWSSoap12"

@section AskAFriendWSSoap12_operations Operations of Binding  "AskAFriendWSSoap12"
  - @ref __ns4__SubmitQuestion
  - @ref __ns4__AttachPhoto
  - @ref __ns4__CompleteQuestion
  - @ref __ns4__GetPrivateAAFQuestion
  - @ref __ns4__GetMyAAFQuestions
  - @ref __ns4__GetNewAAFQuestionCommentIDs
  - @ref __ns4__GetAAFResponse
  - @ref __ns4__GetAAFComments

@section AskAFriendWSSoap12_ports Endpoints of Binding  "AskAFriendWSSoap12"
  - http://services.next2friends.com/n2fwebservices/askafriend.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * AskAFriendWSSoap                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns3__SubmitQuestion                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__SubmitQuestion" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/SubmitQuestion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__SubmitQuestion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SubmitQuestion*               ns1__SubmitQuestion,
    // response parameters:
    _ns1__SubmitQuestionResponse*       ns1__SubmitQuestionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__SubmitQuestion(
    struct soap *soap,
    // request parameters:
    _ns1__SubmitQuestion*               ns1__SubmitQuestion,
    // response parameters:
    _ns1__SubmitQuestionResponse*       ns1__SubmitQuestionResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	SubmitQuestion document
//gsoap ns3  service method-encoding:	SubmitQuestion literal
//gsoap ns3  service method-action:	SubmitQuestion http://tempuri.org/SubmitQuestion
int __ns3__SubmitQuestion(
    _ns1__SubmitQuestion*               ns1__SubmitQuestion,	///< Request parameter
    _ns1__SubmitQuestionResponse*       ns1__SubmitQuestionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__AttachPhoto                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__AttachPhoto" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/AttachPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__AttachPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AttachPhoto*                  ns1__AttachPhoto,
    // response parameters:
    _ns1__AttachPhotoResponse*          ns1__AttachPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__AttachPhoto(
    struct soap *soap,
    // request parameters:
    _ns1__AttachPhoto*                  ns1__AttachPhoto,
    // response parameters:
    _ns1__AttachPhotoResponse*          ns1__AttachPhotoResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	AttachPhoto document
//gsoap ns3  service method-encoding:	AttachPhoto literal
//gsoap ns3  service method-action:	AttachPhoto http://tempuri.org/AttachPhoto
int __ns3__AttachPhoto(
    _ns1__AttachPhoto*                  ns1__AttachPhoto,	///< Request parameter
    _ns1__AttachPhotoResponse*          ns1__AttachPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__CompleteQuestion                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__CompleteQuestion" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/CompleteQuestion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__CompleteQuestion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CompleteQuestion*             ns1__CompleteQuestion,
    // response parameters:
    _ns1__CompleteQuestionResponse*     ns1__CompleteQuestionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__CompleteQuestion(
    struct soap *soap,
    // request parameters:
    _ns1__CompleteQuestion*             ns1__CompleteQuestion,
    // response parameters:
    _ns1__CompleteQuestionResponse*     ns1__CompleteQuestionResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	CompleteQuestion document
//gsoap ns3  service method-encoding:	CompleteQuestion literal
//gsoap ns3  service method-action:	CompleteQuestion http://tempuri.org/CompleteQuestion
int __ns3__CompleteQuestion(
    _ns1__CompleteQuestion*             ns1__CompleteQuestion,	///< Request parameter
    _ns1__CompleteQuestionResponse*     ns1__CompleteQuestionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__GetPrivateAAFQuestion                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPrivateAAFQuestion" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetPrivateAAFQuestion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPrivateAAFQuestion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPrivateAAFQuestion*        ns1__GetPrivateAAFQuestion,
    // response parameters:
    _ns1__GetPrivateAAFQuestionResponse* ns1__GetPrivateAAFQuestionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPrivateAAFQuestion(
    struct soap *soap,
    // request parameters:
    _ns1__GetPrivateAAFQuestion*        ns1__GetPrivateAAFQuestion,
    // response parameters:
    _ns1__GetPrivateAAFQuestionResponse* ns1__GetPrivateAAFQuestionResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	GetPrivateAAFQuestion document
//gsoap ns3  service method-encoding:	GetPrivateAAFQuestion literal
//gsoap ns3  service method-action:	GetPrivateAAFQuestion http://tempuri.org/GetPrivateAAFQuestion
int __ns3__GetPrivateAAFQuestion(
    _ns1__GetPrivateAAFQuestion*        ns1__GetPrivateAAFQuestion,	///< Request parameter
    _ns1__GetPrivateAAFQuestionResponse* ns1__GetPrivateAAFQuestionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__GetMyAAFQuestions                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetMyAAFQuestions" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetMyAAFQuestions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetMyAAFQuestions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetMyAAFQuestions*            ns1__GetMyAAFQuestions,
    // response parameters:
    _ns1__GetMyAAFQuestionsResponse*    ns1__GetMyAAFQuestionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetMyAAFQuestions(
    struct soap *soap,
    // request parameters:
    _ns1__GetMyAAFQuestions*            ns1__GetMyAAFQuestions,
    // response parameters:
    _ns1__GetMyAAFQuestionsResponse*    ns1__GetMyAAFQuestionsResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	GetMyAAFQuestions document
//gsoap ns3  service method-encoding:	GetMyAAFQuestions literal
//gsoap ns3  service method-action:	GetMyAAFQuestions http://tempuri.org/GetMyAAFQuestions
int __ns3__GetMyAAFQuestions(
    _ns1__GetMyAAFQuestions*            ns1__GetMyAAFQuestions,	///< Request parameter
    _ns1__GetMyAAFQuestionsResponse*    ns1__GetMyAAFQuestionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__GetNewAAFQuestionCommentIDs                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetNewAAFQuestionCommentIDs" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetNewAAFQuestionCommentIDs"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetNewAAFQuestionCommentIDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNewAAFQuestionCommentIDs*  ns1__GetNewAAFQuestionCommentIDs,
    // response parameters:
    _ns1__GetNewAAFQuestionCommentIDsResponse* ns1__GetNewAAFQuestionCommentIDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetNewAAFQuestionCommentIDs(
    struct soap *soap,
    // request parameters:
    _ns1__GetNewAAFQuestionCommentIDs*  ns1__GetNewAAFQuestionCommentIDs,
    // response parameters:
    _ns1__GetNewAAFQuestionCommentIDsResponse* ns1__GetNewAAFQuestionCommentIDsResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	GetNewAAFQuestionCommentIDs document
//gsoap ns3  service method-encoding:	GetNewAAFQuestionCommentIDs literal
//gsoap ns3  service method-action:	GetNewAAFQuestionCommentIDs http://tempuri.org/GetNewAAFQuestionCommentIDs
int __ns3__GetNewAAFQuestionCommentIDs(
    _ns1__GetNewAAFQuestionCommentIDs*  ns1__GetNewAAFQuestionCommentIDs,	///< Request parameter
    _ns1__GetNewAAFQuestionCommentIDsResponse* ns1__GetNewAAFQuestionCommentIDsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__GetAAFResponse                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetAAFResponse" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetAAFResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetAAFResponse(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAAFResponse*               ns1__GetAAFResponse,
    // response parameters:
    _ns1__GetAAFResponseResponse*       ns1__GetAAFResponseResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetAAFResponse(
    struct soap *soap,
    // request parameters:
    _ns1__GetAAFResponse*               ns1__GetAAFResponse,
    // response parameters:
    _ns1__GetAAFResponseResponse*       ns1__GetAAFResponseResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	GetAAFResponse document
//gsoap ns3  service method-encoding:	GetAAFResponse literal
//gsoap ns3  service method-action:	GetAAFResponse http://tempuri.org/GetAAFResponse
int __ns3__GetAAFResponse(
    _ns1__GetAAFResponse*               ns1__GetAAFResponse,	///< Request parameter
    _ns1__GetAAFResponseResponse*       ns1__GetAAFResponseResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__GetAAFComments                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetAAFComments" of service binding "AskAFriendWSSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetAAFComments"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetAAFComments(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAAFComments*               ns1__GetAAFComments,
    // response parameters:
    _ns1__GetAAFCommentsResponse*       ns1__GetAAFCommentsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetAAFComments(
    struct soap *soap,
    // request parameters:
    _ns1__GetAAFComments*               ns1__GetAAFComments,
    // response parameters:
    _ns1__GetAAFCommentsResponse*       ns1__GetAAFCommentsResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoapProxy.h):
  class AskAFriendWSSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	GetAAFComments document
//gsoap ns3  service method-encoding:	GetAAFComments literal
//gsoap ns3  service method-action:	GetAAFComments http://tempuri.org/GetAAFComments
int __ns3__GetAAFComments(
    _ns1__GetAAFComments*               ns1__GetAAFComments,	///< Request parameter
    _ns1__GetAAFCommentsResponse*       ns1__GetAAFCommentsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * AskAFriendWSSoap12                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns4__SubmitQuestion                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__SubmitQuestion" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/SubmitQuestion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__SubmitQuestion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SubmitQuestion*               ns1__SubmitQuestion,
    // response parameters:
    _ns1__SubmitQuestionResponse*       ns1__SubmitQuestionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__SubmitQuestion(
    struct soap *soap,
    // request parameters:
    _ns1__SubmitQuestion*               ns1__SubmitQuestion,
    // response parameters:
    _ns1__SubmitQuestionResponse*       ns1__SubmitQuestionResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	SubmitQuestion document
//gsoap ns4  service method-encoding:	SubmitQuestion literal
//gsoap ns4  service method-action:	SubmitQuestion http://tempuri.org/SubmitQuestion
int __ns4__SubmitQuestion(
    _ns1__SubmitQuestion*               ns1__SubmitQuestion,	///< Request parameter
    _ns1__SubmitQuestionResponse*       ns1__SubmitQuestionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__AttachPhoto                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__AttachPhoto" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/AttachPhoto"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__AttachPhoto(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AttachPhoto*                  ns1__AttachPhoto,
    // response parameters:
    _ns1__AttachPhotoResponse*          ns1__AttachPhotoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__AttachPhoto(
    struct soap *soap,
    // request parameters:
    _ns1__AttachPhoto*                  ns1__AttachPhoto,
    // response parameters:
    _ns1__AttachPhotoResponse*          ns1__AttachPhotoResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	AttachPhoto document
//gsoap ns4  service method-encoding:	AttachPhoto literal
//gsoap ns4  service method-action:	AttachPhoto http://tempuri.org/AttachPhoto
int __ns4__AttachPhoto(
    _ns1__AttachPhoto*                  ns1__AttachPhoto,	///< Request parameter
    _ns1__AttachPhotoResponse*          ns1__AttachPhotoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__CompleteQuestion                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__CompleteQuestion" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/CompleteQuestion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__CompleteQuestion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CompleteQuestion*             ns1__CompleteQuestion,
    // response parameters:
    _ns1__CompleteQuestionResponse*     ns1__CompleteQuestionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__CompleteQuestion(
    struct soap *soap,
    // request parameters:
    _ns1__CompleteQuestion*             ns1__CompleteQuestion,
    // response parameters:
    _ns1__CompleteQuestionResponse*     ns1__CompleteQuestionResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	CompleteQuestion document
//gsoap ns4  service method-encoding:	CompleteQuestion literal
//gsoap ns4  service method-action:	CompleteQuestion http://tempuri.org/CompleteQuestion
int __ns4__CompleteQuestion(
    _ns1__CompleteQuestion*             ns1__CompleteQuestion,	///< Request parameter
    _ns1__CompleteQuestionResponse*     ns1__CompleteQuestionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__GetPrivateAAFQuestion                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPrivateAAFQuestion" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetPrivateAAFQuestion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPrivateAAFQuestion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPrivateAAFQuestion*        ns1__GetPrivateAAFQuestion,
    // response parameters:
    _ns1__GetPrivateAAFQuestionResponse* ns1__GetPrivateAAFQuestionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPrivateAAFQuestion(
    struct soap *soap,
    // request parameters:
    _ns1__GetPrivateAAFQuestion*        ns1__GetPrivateAAFQuestion,
    // response parameters:
    _ns1__GetPrivateAAFQuestionResponse* ns1__GetPrivateAAFQuestionResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	GetPrivateAAFQuestion document
//gsoap ns4  service method-encoding:	GetPrivateAAFQuestion literal
//gsoap ns4  service method-action:	GetPrivateAAFQuestion http://tempuri.org/GetPrivateAAFQuestion
int __ns4__GetPrivateAAFQuestion(
    _ns1__GetPrivateAAFQuestion*        ns1__GetPrivateAAFQuestion,	///< Request parameter
    _ns1__GetPrivateAAFQuestionResponse* ns1__GetPrivateAAFQuestionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__GetMyAAFQuestions                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetMyAAFQuestions" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetMyAAFQuestions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetMyAAFQuestions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetMyAAFQuestions*            ns1__GetMyAAFQuestions,
    // response parameters:
    _ns1__GetMyAAFQuestionsResponse*    ns1__GetMyAAFQuestionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetMyAAFQuestions(
    struct soap *soap,
    // request parameters:
    _ns1__GetMyAAFQuestions*            ns1__GetMyAAFQuestions,
    // response parameters:
    _ns1__GetMyAAFQuestionsResponse*    ns1__GetMyAAFQuestionsResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	GetMyAAFQuestions document
//gsoap ns4  service method-encoding:	GetMyAAFQuestions literal
//gsoap ns4  service method-action:	GetMyAAFQuestions http://tempuri.org/GetMyAAFQuestions
int __ns4__GetMyAAFQuestions(
    _ns1__GetMyAAFQuestions*            ns1__GetMyAAFQuestions,	///< Request parameter
    _ns1__GetMyAAFQuestionsResponse*    ns1__GetMyAAFQuestionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__GetNewAAFQuestionCommentIDs                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetNewAAFQuestionCommentIDs" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetNewAAFQuestionCommentIDs"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetNewAAFQuestionCommentIDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNewAAFQuestionCommentIDs*  ns1__GetNewAAFQuestionCommentIDs,
    // response parameters:
    _ns1__GetNewAAFQuestionCommentIDsResponse* ns1__GetNewAAFQuestionCommentIDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetNewAAFQuestionCommentIDs(
    struct soap *soap,
    // request parameters:
    _ns1__GetNewAAFQuestionCommentIDs*  ns1__GetNewAAFQuestionCommentIDs,
    // response parameters:
    _ns1__GetNewAAFQuestionCommentIDsResponse* ns1__GetNewAAFQuestionCommentIDsResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	GetNewAAFQuestionCommentIDs document
//gsoap ns4  service method-encoding:	GetNewAAFQuestionCommentIDs literal
//gsoap ns4  service method-action:	GetNewAAFQuestionCommentIDs http://tempuri.org/GetNewAAFQuestionCommentIDs
int __ns4__GetNewAAFQuestionCommentIDs(
    _ns1__GetNewAAFQuestionCommentIDs*  ns1__GetNewAAFQuestionCommentIDs,	///< Request parameter
    _ns1__GetNewAAFQuestionCommentIDsResponse* ns1__GetNewAAFQuestionCommentIDsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__GetAAFResponse                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetAAFResponse" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetAAFResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetAAFResponse(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAAFResponse*               ns1__GetAAFResponse,
    // response parameters:
    _ns1__GetAAFResponseResponse*       ns1__GetAAFResponseResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetAAFResponse(
    struct soap *soap,
    // request parameters:
    _ns1__GetAAFResponse*               ns1__GetAAFResponse,
    // response parameters:
    _ns1__GetAAFResponseResponse*       ns1__GetAAFResponseResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	GetAAFResponse document
//gsoap ns4  service method-encoding:	GetAAFResponse literal
//gsoap ns4  service method-action:	GetAAFResponse http://tempuri.org/GetAAFResponse
int __ns4__GetAAFResponse(
    _ns1__GetAAFResponse*               ns1__GetAAFResponse,	///< Request parameter
    _ns1__GetAAFResponseResponse*       ns1__GetAAFResponseResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__GetAAFComments                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetAAFComments" of service binding "AskAFriendWSSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://tempuri.org/GetAAFComments"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetAAFComments(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAAFComments*               ns1__GetAAFComments,
    // response parameters:
    _ns1__GetAAFCommentsResponse*       ns1__GetAAFCommentsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetAAFComments(
    struct soap *soap,
    // request parameters:
    _ns1__GetAAFComments*               ns1__GetAAFComments,
    // response parameters:
    _ns1__GetAAFCommentsResponse*       ns1__GetAAFCommentsResponse
  );
@endcode

C++ proxy class (defined in soapAskAFriendWSSoap12Proxy.h):
  class AskAFriendWSSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	GetAAFComments document
//gsoap ns4  service method-encoding:	GetAAFComments literal
//gsoap ns4  service method-action:	GetAAFComments http://tempuri.org/GetAAFComments
int __ns4__GetAAFComments(
    _ns1__GetAAFComments*               ns1__GetAAFComments,	///< Request parameter
    _ns1__GetAAFCommentsResponse*       ns1__GetAAFCommentsResponse	///< Response parameter
);

/* End of output\askafriendservice.h */
