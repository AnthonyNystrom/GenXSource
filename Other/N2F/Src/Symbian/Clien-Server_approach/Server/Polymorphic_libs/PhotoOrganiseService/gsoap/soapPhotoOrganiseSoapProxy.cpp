/* soapPhotoOrganiseSoapProxy.cpp
   Generated by gSOAP 2.7.10 from output\photoorganiseservice.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapPhotoOrganiseSoapProxy.h"

PhotoOrganiseSoapProxy::PhotoOrganiseSoapProxy()
{	PhotoOrganiseSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PhotoOrganiseSoapProxy::PhotoOrganiseSoapProxy(const struct soap &soap)
{	PhotoOrganiseSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_copy_context(this, &soap);
}

PhotoOrganiseSoapProxy::PhotoOrganiseSoapProxy(soap_mode iomode)
{	PhotoOrganiseSoapProxy_init(iomode, iomode);
}

PhotoOrganiseSoapProxy::PhotoOrganiseSoapProxy(soap_mode imode, soap_mode omode)
{	PhotoOrganiseSoapProxy_init(imode, omode);
}

void PhotoOrganiseSoapProxy::PhotoOrganiseSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns3", "http://tempuri.org/PhotoOrganiseSoap", NULL, NULL},
	{"ns1", "http://tempuri.org/", NULL, NULL},
	{"ns4", "http://tempuri.org/PhotoOrganiseSoap12", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	if (!this->namespaces)
		this->namespaces = namespaces;
}

PhotoOrganiseSoapProxy::~PhotoOrganiseSoapProxy()
{ }

void PhotoOrganiseSoapProxy::soap_noheader()
{	header = NULL;
}

const SOAP_ENV__Fault *PhotoOrganiseSoapProxy::soap_fault()
{	return this->fault;
}

const char *PhotoOrganiseSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *PhotoOrganiseSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int PhotoOrganiseSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

void PhotoOrganiseSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void PhotoOrganiseSoapProxy::soap_stream_fault(std::ostream& os)
{	return ::soap_stream_fault(this, os);
}

char *PhotoOrganiseSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int PhotoOrganiseSoapProxy::Login(_ns1__Login *ns1__Login, _ns1__LoginResponse *ns1__LoginResponse)
{	struct soap *soap = this;
	struct __ns3__Login soap_tmp___ns3__Login;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/Login";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__Login.ns1__Login = ns1__Login;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__Login(soap, &soap_tmp___ns3__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__Login(soap, &soap_tmp___ns3__Login, "-ns3:Login", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__Login(soap, &soap_tmp___ns3__Login, "-ns3:Login", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__LoginResponse)
		return soap_closesock(soap);
	ns1__LoginResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginResponse->soap_get(soap, "ns1:LoginResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::CreateNewCollection(_ns1__CreateNewCollection *ns1__CreateNewCollection, _ns1__CreateNewCollectionResponse *ns1__CreateNewCollectionResponse)
{	struct soap *soap = this;
	struct __ns3__CreateNewCollection soap_tmp___ns3__CreateNewCollection;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/CreateNewCollection";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__CreateNewCollection.ns1__CreateNewCollection = ns1__CreateNewCollection;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__CreateNewCollection(soap, &soap_tmp___ns3__CreateNewCollection);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__CreateNewCollection(soap, &soap_tmp___ns3__CreateNewCollection, "-ns3:CreateNewCollection", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__CreateNewCollection(soap, &soap_tmp___ns3__CreateNewCollection, "-ns3:CreateNewCollection", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CreateNewCollectionResponse)
		return soap_closesock(soap);
	ns1__CreateNewCollectionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateNewCollectionResponse->soap_get(soap, "ns1:CreateNewCollectionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::GetCollections(_ns1__GetCollections *ns1__GetCollections, _ns1__GetCollectionsResponse *ns1__GetCollectionsResponse)
{	struct soap *soap = this;
	struct __ns3__GetCollections soap_tmp___ns3__GetCollections;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/GetCollections";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetCollections.ns1__GetCollections = ns1__GetCollections;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetCollections(soap, &soap_tmp___ns3__GetCollections);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetCollections(soap, &soap_tmp___ns3__GetCollections, "-ns3:GetCollections", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetCollections(soap, &soap_tmp___ns3__GetCollections, "-ns3:GetCollections", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetCollectionsResponse)
		return soap_closesock(soap);
	ns1__GetCollectionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCollectionsResponse->soap_get(soap, "ns1:GetCollectionsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::GetPhotosByCollection(_ns1__GetPhotosByCollection *ns1__GetPhotosByCollection, _ns1__GetPhotosByCollectionResponse *ns1__GetPhotosByCollectionResponse)
{	struct soap *soap = this;
	struct __ns3__GetPhotosByCollection soap_tmp___ns3__GetPhotosByCollection;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/GetPhotosByCollection";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetPhotosByCollection.ns1__GetPhotosByCollection = ns1__GetPhotosByCollection;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__GetPhotosByCollection(soap, &soap_tmp___ns3__GetPhotosByCollection);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetPhotosByCollection(soap, &soap_tmp___ns3__GetPhotosByCollection, "-ns3:GetPhotosByCollection", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetPhotosByCollection(soap, &soap_tmp___ns3__GetPhotosByCollection, "-ns3:GetPhotosByCollection", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetPhotosByCollectionResponse)
		return soap_closesock(soap);
	ns1__GetPhotosByCollectionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPhotosByCollectionResponse->soap_get(soap, "ns1:GetPhotosByCollectionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::UploadPhoto(_ns1__UploadPhoto *ns1__UploadPhoto, _ns1__UploadPhotoResponse *ns1__UploadPhotoResponse)
{	struct soap *soap = this;
	struct __ns3__UploadPhoto soap_tmp___ns3__UploadPhoto;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/UploadPhoto";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__UploadPhoto.ns1__UploadPhoto = ns1__UploadPhoto;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__UploadPhoto(soap, &soap_tmp___ns3__UploadPhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__UploadPhoto(soap, &soap_tmp___ns3__UploadPhoto, "-ns3:UploadPhoto", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__UploadPhoto(soap, &soap_tmp___ns3__UploadPhoto, "-ns3:UploadPhoto", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__UploadPhotoResponse)
		return soap_closesock(soap);
	ns1__UploadPhotoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadPhotoResponse->soap_get(soap, "ns1:UploadPhotoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::DeviceUploadPhoto(_ns1__DeviceUploadPhoto *ns1__DeviceUploadPhoto, _ns1__DeviceUploadPhotoResponse *ns1__DeviceUploadPhotoResponse)
{	struct soap *soap = this;
	struct __ns3__DeviceUploadPhoto soap_tmp___ns3__DeviceUploadPhoto;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/DeviceUploadPhoto";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__DeviceUploadPhoto.ns1__DeviceUploadPhoto = ns1__DeviceUploadPhoto;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__DeviceUploadPhoto(soap, &soap_tmp___ns3__DeviceUploadPhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__DeviceUploadPhoto(soap, &soap_tmp___ns3__DeviceUploadPhoto, "-ns3:DeviceUploadPhoto", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__DeviceUploadPhoto(soap, &soap_tmp___ns3__DeviceUploadPhoto, "-ns3:DeviceUploadPhoto", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeviceUploadPhotoResponse)
		return soap_closesock(soap);
	ns1__DeviceUploadPhotoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeviceUploadPhotoResponse->soap_get(soap, "ns1:DeviceUploadPhotoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::JavaUploadPhoto(_ns1__JavaUploadPhoto *ns1__JavaUploadPhoto, _ns1__JavaUploadPhotoResponse *ns1__JavaUploadPhotoResponse)
{	struct soap *soap = this;
	struct __ns3__JavaUploadPhoto soap_tmp___ns3__JavaUploadPhoto;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/JavaUploadPhoto";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__JavaUploadPhoto.ns1__JavaUploadPhoto = ns1__JavaUploadPhoto;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__JavaUploadPhoto(soap, &soap_tmp___ns3__JavaUploadPhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__JavaUploadPhoto(soap, &soap_tmp___ns3__JavaUploadPhoto, "-ns3:JavaUploadPhoto", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__JavaUploadPhoto(soap, &soap_tmp___ns3__JavaUploadPhoto, "-ns3:JavaUploadPhoto", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__JavaUploadPhotoResponse)
		return soap_closesock(soap);
	ns1__JavaUploadPhotoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__JavaUploadPhotoResponse->soap_get(soap, "ns1:JavaUploadPhotoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::RenameCollection(_ns1__RenameCollection *ns1__RenameCollection, _ns1__RenameCollectionResponse *ns1__RenameCollectionResponse)
{	struct soap *soap = this;
	struct __ns3__RenameCollection soap_tmp___ns3__RenameCollection;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/RenameCollection";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__RenameCollection.ns1__RenameCollection = ns1__RenameCollection;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__RenameCollection(soap, &soap_tmp___ns3__RenameCollection);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__RenameCollection(soap, &soap_tmp___ns3__RenameCollection, "-ns3:RenameCollection", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__RenameCollection(soap, &soap_tmp___ns3__RenameCollection, "-ns3:RenameCollection", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__RenameCollectionResponse)
		return soap_closesock(soap);
	ns1__RenameCollectionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RenameCollectionResponse->soap_get(soap, "ns1:RenameCollectionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PhotoOrganiseSoapProxy::DeletePhoto(_ns1__DeletePhoto *ns1__DeletePhoto, _ns1__DeletePhotoResponse *ns1__DeletePhotoResponse)
{	struct soap *soap = this;
	struct __ns3__DeletePhoto soap_tmp___ns3__DeletePhoto;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://services.next2friends.com/n2fwebservices/photoorganise.asmx";
	soap_action = "http://tempuri.org/DeletePhoto";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__DeletePhoto.ns1__DeletePhoto = ns1__DeletePhoto;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__DeletePhoto(soap, &soap_tmp___ns3__DeletePhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__DeletePhoto(soap, &soap_tmp___ns3__DeletePhoto, "-ns3:DeletePhoto", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__DeletePhoto(soap, &soap_tmp___ns3__DeletePhoto, "-ns3:DeletePhoto", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeletePhotoResponse)
		return soap_closesock(soap);
	ns1__DeletePhotoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeletePhotoResponse->soap_get(soap, "ns1:DeletePhotoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
