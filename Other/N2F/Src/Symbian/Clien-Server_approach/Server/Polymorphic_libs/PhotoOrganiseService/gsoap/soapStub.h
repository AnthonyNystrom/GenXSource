/* soapStub.h
   Generated by gSOAP 2.7.10 from output\photoorganiseservice.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() : __ptr(NULL), __size(0), id(NULL), type(NULL), options(NULL), soap(NULL) { }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPhotoCollectionItem
#define SOAP_TYPE_ns1__ArrayOfPhotoCollectionItem (12)
/* ns1:ArrayOfPhotoCollectionItem */
class SOAP_CMAC ns1__ArrayOfPhotoCollectionItem
{
public:
	int __sizePhotoCollectionItem;	/* sequence of elements <PhotoCollectionItem> */
	class ns1__PhotoCollectionItem **PhotoCollectionItem;	/* optional element of type ns1:PhotoCollectionItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns1__ArrayOfPhotoCollectionItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPhotoCollectionItem() : __sizePhotoCollectionItem(0), PhotoCollectionItem(NULL), soap(NULL) { }
	virtual ~ns1__ArrayOfPhotoCollectionItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhotoCollectionItem
#define SOAP_TYPE_ns1__PhotoCollectionItem (13)
/* ns1:PhotoCollectionItem */
class SOAP_CMAC ns1__PhotoCollectionItem
{
public:
	char *WebPhotoCollectionID;	/* optional element of type xsd:string */
	char *Name;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns1__PhotoCollectionItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhotoCollectionItem() : WebPhotoCollectionID(NULL), Name(NULL), soap(NULL) { }
	virtual ~ns1__PhotoCollectionItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPhotoItem
#define SOAP_TYPE_ns1__ArrayOfPhotoItem (14)
/* ns1:ArrayOfPhotoItem */
class SOAP_CMAC ns1__ArrayOfPhotoItem
{
public:
	int __sizePhotoItem;	/* sequence of elements <PhotoItem> */
	class ns1__PhotoItem **PhotoItem;	/* optional element of type ns1:PhotoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns1__ArrayOfPhotoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPhotoItem() : __sizePhotoItem(0), PhotoItem(NULL), soap(NULL) { }
	virtual ~ns1__ArrayOfPhotoItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhotoItem
#define SOAP_TYPE_ns1__PhotoItem (15)
/* ns1:PhotoItem */
class SOAP_CMAC ns1__PhotoItem
{
public:
	char *WebPhotoID;	/* optional element of type xsd:string */
	char *MainPhotoURL;	/* optional element of type xsd:string */
	char *ThumbnailURL;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns1__PhotoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhotoItem() : WebPhotoID(NULL), MainPhotoURL(NULL), ThumbnailURL(NULL), soap(NULL) { }
	virtual ~ns1__PhotoItem() { }
};
#endif

#ifndef SOAP_TYPE__ns1__Login
#define SOAP_TYPE__ns1__Login (16)
/* ns1:Login */
class SOAP_CMAC _ns1__Login
{
public:
	char *Email;	/* optional element of type xsd:string */
	char *Password;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE__ns1__Login */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__Login() : Email(NULL), Password(NULL), soap(NULL) { }
	virtual ~_ns1__Login() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LoginResponse
#define SOAP_TYPE__ns1__LoginResponse (17)
/* ns1:LoginResponse */
class SOAP_CMAC _ns1__LoginResponse
{
public:
	char *LoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE__ns1__LoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LoginResponse() : LoginResult(NULL), soap(NULL) { }
	virtual ~_ns1__LoginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CreateNewCollection
#define SOAP_TYPE__ns1__CreateNewCollection (18)
/* ns1:CreateNewCollection */
class SOAP_CMAC _ns1__CreateNewCollection
{
public:
	char *NewFolderName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE__ns1__CreateNewCollection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CreateNewCollection() : NewFolderName(NULL), soap(NULL) { }
	virtual ~_ns1__CreateNewCollection() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CreateNewCollectionResponse
#define SOAP_TYPE__ns1__CreateNewCollectionResponse (19)
/* ns1:CreateNewCollectionResponse */
class SOAP_CMAC _ns1__CreateNewCollectionResponse
{
public:
	bool CreateNewCollectionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE__ns1__CreateNewCollectionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CreateNewCollectionResponse() : CreateNewCollectionResult((bool)0), soap(NULL) { }
	virtual ~_ns1__CreateNewCollectionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCollections
#define SOAP_TYPE__ns1__GetCollections (20)
/* ns1:GetCollections */
class SOAP_CMAC _ns1__GetCollections
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE__ns1__GetCollections */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCollections() : soap(NULL) { }
	virtual ~_ns1__GetCollections() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCollectionsResponse
#define SOAP_TYPE__ns1__GetCollectionsResponse (21)
/* ns1:GetCollectionsResponse */
class SOAP_CMAC _ns1__GetCollectionsResponse
{
public:
	ns1__ArrayOfPhotoCollectionItem *GetCollectionsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPhotoCollectionItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE__ns1__GetCollectionsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCollectionsResponse() : GetCollectionsResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetCollectionsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhotosByCollection
#define SOAP_TYPE__ns1__GetPhotosByCollection (22)
/* ns1:GetPhotosByCollection */
class SOAP_CMAC _ns1__GetPhotosByCollection
{
public:
	char *WebPhotoCollectionID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE__ns1__GetPhotosByCollection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhotosByCollection() : WebPhotoCollectionID(NULL), soap(NULL) { }
	virtual ~_ns1__GetPhotosByCollection() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhotosByCollectionResponse
#define SOAP_TYPE__ns1__GetPhotosByCollectionResponse (23)
/* ns1:GetPhotosByCollectionResponse */
class SOAP_CMAC _ns1__GetPhotosByCollectionResponse
{
public:
	ns1__ArrayOfPhotoItem *GetPhotosByCollectionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPhotoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE__ns1__GetPhotosByCollectionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhotosByCollectionResponse() : GetPhotosByCollectionResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetPhotosByCollectionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadPhoto
#define SOAP_TYPE__ns1__UploadPhoto (24)
/* ns1:UploadPhoto */
class SOAP_CMAC _ns1__UploadPhoto
{
public:
	char *WebPhotoCollectionID;	/* optional element of type xsd:string */
	xsd__base64Binary *MainPhotoFilebytes;	/* optional element of type xsd:base64Binary */
	time_t TakenDT;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE__ns1__UploadPhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadPhoto() : WebPhotoCollectionID(NULL), MainPhotoFilebytes(NULL), TakenDT(0), soap(NULL) { }
	virtual ~_ns1__UploadPhoto() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadPhotoResponse
#define SOAP_TYPE__ns1__UploadPhotoResponse (25)
/* ns1:UploadPhotoResponse */
class SOAP_CMAC _ns1__UploadPhotoResponse
{
public:
	bool UploadPhotoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE__ns1__UploadPhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadPhotoResponse() : UploadPhotoResult((bool)0), soap(NULL) { }
	virtual ~_ns1__UploadPhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeviceUploadPhoto
#define SOAP_TYPE__ns1__DeviceUploadPhoto (26)
/* ns1:DeviceUploadPhoto */
class SOAP_CMAC _ns1__DeviceUploadPhoto
{
public:
	char *WebMemberID;	/* optional element of type xsd:string */
	char *WebPassword;	/* optional element of type xsd:string */
	char *Base64StringPhoto;	/* optional element of type xsd:string */
	char *DateTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE__ns1__DeviceUploadPhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeviceUploadPhoto() : WebMemberID(NULL), WebPassword(NULL), Base64StringPhoto(NULL), DateTime(NULL), soap(NULL) { }
	virtual ~_ns1__DeviceUploadPhoto() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeviceUploadPhotoResponse
#define SOAP_TYPE__ns1__DeviceUploadPhotoResponse (27)
/* ns1:DeviceUploadPhotoResponse */
class SOAP_CMAC _ns1__DeviceUploadPhotoResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE__ns1__DeviceUploadPhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeviceUploadPhotoResponse() : soap(NULL) { }
	virtual ~_ns1__DeviceUploadPhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__JavaUploadPhoto
#define SOAP_TYPE__ns1__JavaUploadPhoto (28)
/* ns1:JavaUploadPhoto */
class SOAP_CMAC _ns1__JavaUploadPhoto
{
public:
	char *EncryptedWebMemberID;	/* optional element of type xsd:string */
	char *WebPhotoCollectionID;	/* optional element of type xsd:string */
	char *Base64StringPhoto;	/* optional element of type xsd:string */
	char *DateTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE__ns1__JavaUploadPhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__JavaUploadPhoto() : EncryptedWebMemberID(NULL), WebPhotoCollectionID(NULL), Base64StringPhoto(NULL), DateTime(NULL), soap(NULL) { }
	virtual ~_ns1__JavaUploadPhoto() { }
};
#endif

#ifndef SOAP_TYPE__ns1__JavaUploadPhotoResponse
#define SOAP_TYPE__ns1__JavaUploadPhotoResponse (29)
/* ns1:JavaUploadPhotoResponse */
class SOAP_CMAC _ns1__JavaUploadPhotoResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE__ns1__JavaUploadPhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__JavaUploadPhotoResponse() : soap(NULL) { }
	virtual ~_ns1__JavaUploadPhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RenameCollection
#define SOAP_TYPE__ns1__RenameCollection (30)
/* ns1:RenameCollection */
class SOAP_CMAC _ns1__RenameCollection
{
public:
	char *WebPhotoCollectionID;	/* optional element of type xsd:string */
	char *NewName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE__ns1__RenameCollection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RenameCollection() : WebPhotoCollectionID(NULL), NewName(NULL), soap(NULL) { }
	virtual ~_ns1__RenameCollection() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RenameCollectionResponse
#define SOAP_TYPE__ns1__RenameCollectionResponse (31)
/* ns1:RenameCollectionResponse */
class SOAP_CMAC _ns1__RenameCollectionResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE__ns1__RenameCollectionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RenameCollectionResponse() : soap(NULL) { }
	virtual ~_ns1__RenameCollectionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeletePhoto
#define SOAP_TYPE__ns1__DeletePhoto (32)
/* ns1:DeletePhoto */
class SOAP_CMAC _ns1__DeletePhoto
{
public:
	char *WebPhotoID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE__ns1__DeletePhoto */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeletePhoto() : WebPhotoID(NULL), soap(NULL) { }
	virtual ~_ns1__DeletePhoto() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeletePhotoResponse
#define SOAP_TYPE__ns1__DeletePhotoResponse (33)
/* ns1:DeletePhotoResponse */
class SOAP_CMAC _ns1__DeletePhotoResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE__ns1__DeletePhotoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeletePhotoResponse() : soap(NULL) { }
	virtual ~_ns1__DeletePhotoResponse() { }
};
#endif

#ifndef SOAP_TYPE_StringArray
#define SOAP_TYPE_StringArray (34)
/* SOAP encoded array of xsd:string schema type: */
class SOAP_CMAC StringArray
{
public:
	char **__ptrString;
	int __size;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_StringArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         StringArray() : __ptrString(NULL), __size(0), soap(NULL) { }
	virtual ~StringArray() { }
};
#endif

#ifndef SOAP_TYPE___ns3__Login
#define SOAP_TYPE___ns3__Login (48)
/* Operation wrapper: */
struct __ns3__Login
{
public:
	_ns1__Login *ns1__Login;	/* optional element of type ns1:Login */
};
#endif

#ifndef SOAP_TYPE___ns3__CreateNewCollection
#define SOAP_TYPE___ns3__CreateNewCollection (52)
/* Operation wrapper: */
struct __ns3__CreateNewCollection
{
public:
	_ns1__CreateNewCollection *ns1__CreateNewCollection;	/* optional element of type ns1:CreateNewCollection */
};
#endif

#ifndef SOAP_TYPE___ns3__GetCollections
#define SOAP_TYPE___ns3__GetCollections (56)
/* Operation wrapper: */
struct __ns3__GetCollections
{
public:
	_ns1__GetCollections *ns1__GetCollections;	/* optional element of type ns1:GetCollections */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPhotosByCollection
#define SOAP_TYPE___ns3__GetPhotosByCollection (60)
/* Operation wrapper: */
struct __ns3__GetPhotosByCollection
{
public:
	_ns1__GetPhotosByCollection *ns1__GetPhotosByCollection;	/* optional element of type ns1:GetPhotosByCollection */
};
#endif

#ifndef SOAP_TYPE___ns3__UploadPhoto
#define SOAP_TYPE___ns3__UploadPhoto (64)
/* Operation wrapper: */
struct __ns3__UploadPhoto
{
public:
	_ns1__UploadPhoto *ns1__UploadPhoto;	/* optional element of type ns1:UploadPhoto */
};
#endif

#ifndef SOAP_TYPE___ns3__DeviceUploadPhoto
#define SOAP_TYPE___ns3__DeviceUploadPhoto (68)
/* Operation wrapper: */
struct __ns3__DeviceUploadPhoto
{
public:
	_ns1__DeviceUploadPhoto *ns1__DeviceUploadPhoto;	/* optional element of type ns1:DeviceUploadPhoto */
};
#endif

#ifndef SOAP_TYPE___ns3__JavaUploadPhoto
#define SOAP_TYPE___ns3__JavaUploadPhoto (72)
/* Operation wrapper: */
struct __ns3__JavaUploadPhoto
{
public:
	_ns1__JavaUploadPhoto *ns1__JavaUploadPhoto;	/* optional element of type ns1:JavaUploadPhoto */
};
#endif

#ifndef SOAP_TYPE___ns3__RenameCollection
#define SOAP_TYPE___ns3__RenameCollection (76)
/* Operation wrapper: */
struct __ns3__RenameCollection
{
public:
	_ns1__RenameCollection *ns1__RenameCollection;	/* optional element of type ns1:RenameCollection */
};
#endif

#ifndef SOAP_TYPE___ns3__DeletePhoto
#define SOAP_TYPE___ns3__DeletePhoto (80)
/* Operation wrapper: */
struct __ns3__DeletePhoto
{
public:
	_ns1__DeletePhoto *ns1__DeletePhoto;	/* optional element of type ns1:DeletePhoto */
};
#endif

#ifndef SOAP_TYPE___ns4__Login
#define SOAP_TYPE___ns4__Login (82)
/* Operation wrapper: */
struct __ns4__Login
{
public:
	_ns1__Login *ns1__Login;	/* optional element of type ns1:Login */
};
#endif

#ifndef SOAP_TYPE___ns4__CreateNewCollection
#define SOAP_TYPE___ns4__CreateNewCollection (84)
/* Operation wrapper: */
struct __ns4__CreateNewCollection
{
public:
	_ns1__CreateNewCollection *ns1__CreateNewCollection;	/* optional element of type ns1:CreateNewCollection */
};
#endif

#ifndef SOAP_TYPE___ns4__GetCollections
#define SOAP_TYPE___ns4__GetCollections (86)
/* Operation wrapper: */
struct __ns4__GetCollections
{
public:
	_ns1__GetCollections *ns1__GetCollections;	/* optional element of type ns1:GetCollections */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPhotosByCollection
#define SOAP_TYPE___ns4__GetPhotosByCollection (88)
/* Operation wrapper: */
struct __ns4__GetPhotosByCollection
{
public:
	_ns1__GetPhotosByCollection *ns1__GetPhotosByCollection;	/* optional element of type ns1:GetPhotosByCollection */
};
#endif

#ifndef SOAP_TYPE___ns4__UploadPhoto
#define SOAP_TYPE___ns4__UploadPhoto (90)
/* Operation wrapper: */
struct __ns4__UploadPhoto
{
public:
	_ns1__UploadPhoto *ns1__UploadPhoto;	/* optional element of type ns1:UploadPhoto */
};
#endif

#ifndef SOAP_TYPE___ns4__DeviceUploadPhoto
#define SOAP_TYPE___ns4__DeviceUploadPhoto (92)
/* Operation wrapper: */
struct __ns4__DeviceUploadPhoto
{
public:
	_ns1__DeviceUploadPhoto *ns1__DeviceUploadPhoto;	/* optional element of type ns1:DeviceUploadPhoto */
};
#endif

#ifndef SOAP_TYPE___ns4__JavaUploadPhoto
#define SOAP_TYPE___ns4__JavaUploadPhoto (94)
/* Operation wrapper: */
struct __ns4__JavaUploadPhoto
{
public:
	_ns1__JavaUploadPhoto *ns1__JavaUploadPhoto;	/* optional element of type ns1:JavaUploadPhoto */
};
#endif

#ifndef SOAP_TYPE___ns4__RenameCollection
#define SOAP_TYPE___ns4__RenameCollection (96)
/* Operation wrapper: */
struct __ns4__RenameCollection
{
public:
	_ns1__RenameCollection *ns1__RenameCollection;	/* optional element of type ns1:RenameCollection */
};
#endif

#ifndef SOAP_TYPE___ns4__DeletePhoto
#define SOAP_TYPE___ns4__DeletePhoto (98)
/* Operation wrapper: */
struct __ns4__DeletePhoto
{
public:
	_ns1__DeletePhoto *ns1__DeletePhoto;	/* optional element of type ns1:DeletePhoto */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (99)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (100)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (102)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (105)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (106)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
