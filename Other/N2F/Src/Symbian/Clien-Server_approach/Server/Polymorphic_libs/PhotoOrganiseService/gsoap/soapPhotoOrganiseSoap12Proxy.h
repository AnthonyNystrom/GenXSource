/* soapPhotoOrganiseSoap12Proxy.h
   Generated by gSOAP 2.7.10 from output\photoorganiseservice.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapPhotoOrganiseSoap12Proxy_H
#define soapPhotoOrganiseSoap12Proxy_H
#include "soapH.h"

class SOAP_CMAC PhotoOrganiseSoap12Proxy : public soap
{ public:
	/// Endpoint URL of service 'PhotoOrganiseSoap12Proxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	PhotoOrganiseSoap12Proxy();
	/// Constructor with copy of another engine state
	PhotoOrganiseSoap12Proxy(const struct soap&);
	/// Constructor with engine input+output mode control
	PhotoOrganiseSoap12Proxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	PhotoOrganiseSoap12Proxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~PhotoOrganiseSoap12Proxy();
	/// Initializer used by constructor
	virtual	void PhotoOrganiseSoap12Proxy_init(soap_mode imode, soap_mode omode);
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'Login' (returns error code or SOAP_OK)
	virtual	int Login(_ns1__Login *ns1__Login, _ns1__LoginResponse *ns1__LoginResponse);

	/// Web service operation 'CreateNewCollection' (returns error code or SOAP_OK)
	virtual	int CreateNewCollection(_ns1__CreateNewCollection *ns1__CreateNewCollection, _ns1__CreateNewCollectionResponse *ns1__CreateNewCollectionResponse);

	/// Web service operation 'GetCollections' (returns error code or SOAP_OK)
	virtual	int GetCollections(_ns1__GetCollections *ns1__GetCollections, _ns1__GetCollectionsResponse *ns1__GetCollectionsResponse);

	/// Web service operation 'GetPhotosByCollection' (returns error code or SOAP_OK)
	virtual	int GetPhotosByCollection(_ns1__GetPhotosByCollection *ns1__GetPhotosByCollection, _ns1__GetPhotosByCollectionResponse *ns1__GetPhotosByCollectionResponse);

	/// Web service operation 'UploadPhoto' (returns error code or SOAP_OK)
	virtual	int UploadPhoto(_ns1__UploadPhoto *ns1__UploadPhoto, _ns1__UploadPhotoResponse *ns1__UploadPhotoResponse);

	/// Web service operation 'DeviceUploadPhoto' (returns error code or SOAP_OK)
	virtual	int DeviceUploadPhoto(_ns1__DeviceUploadPhoto *ns1__DeviceUploadPhoto, _ns1__DeviceUploadPhotoResponse *ns1__DeviceUploadPhotoResponse);

	/// Web service operation 'JavaUploadPhoto' (returns error code or SOAP_OK)
	virtual	int JavaUploadPhoto(_ns1__JavaUploadPhoto *ns1__JavaUploadPhoto, _ns1__JavaUploadPhotoResponse *ns1__JavaUploadPhotoResponse);

	/// Web service operation 'RenameCollection' (returns error code or SOAP_OK)
	virtual	int RenameCollection(_ns1__RenameCollection *ns1__RenameCollection, _ns1__RenameCollectionResponse *ns1__RenameCollectionResponse);

	/// Web service operation 'DeletePhoto' (returns error code or SOAP_OK)
	virtual	int DeletePhoto(_ns1__DeletePhoto *ns1__DeletePhoto, _ns1__DeletePhotoResponse *ns1__DeletePhotoResponse);
};
#endif
